<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:local="clr-namespace:Geology"
        xmlns:openglwin="clr-namespace:Geology.DrawWindow"
        xmlns:control="clr-namespace:Geology.Controls"
        xmlns:localGrid ="clr-namespace:Geology.Objects"
        xmlns:graphViewer="clr-namespace:Geology.GraphViewer"
        xmlns:postProc="clr-namespace:Geology.PostProcessing"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d" x:Class="Geology.MainWindow"
        Title="Geology" Height="1050.866" Width="1840.895"
        Closing="MainWindow_Closing" >
    <Window.CommandBindings>
        <CommandBinding Command="Open" Executed="MenuClickOpen"></CommandBinding>
        <CommandBinding Command="Save" Executed="MenuClickSave"></CommandBinding>
        <CommandBinding Command="SaveAs" Executed="MenuClickSaveAs"></CommandBinding>
    </Window.CommandBindings>
    <Window.InputBindings>
        <KeyBinding Key="O" Modifiers="Control" Command="Open"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control" Command="Save"></KeyBinding>
        <KeyBinding Key="S" Modifiers="Control+Shift" Command="SaveAs"></KeyBinding>
    </Window.InputBindings>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File" >
                <MenuItem Header="_New" Click="MenuClickNew"/>
                <!-- Click="MenuClickNew"/> -->
                <MenuItem Header="_Open" Click="MenuClickOpen" InputGestureText="Ctrl+O"/>
                <!-- Click="MenuClickOpen"/>-->
                <MenuItem Header="_Save..." Click="MenuClickSave" InputGestureText="Ctrl+S"/>
                <!-- Click="MenuClickSave" />-->
                <MenuItem Header="_Save As.." Click="MenuClickSaveAs" InputGestureText="Ctrl+Shift+S"/>
                <!-- Click="MenuClickSaveAs" />-->
                <Separator />
                <MenuItem Header="Import" Click="MenuClickImport" InputGestureText="Ctrl+I"/>
                <!-- Click="MenuClickImport"/>-->
                <MenuItem Header="_Export" Click="MenuClickExport"/>
                <!-- Click="MenuClickExport"/>-->
                <Separator />
                <MenuItem Header="_Load Filters Values"/>
                <!-- Click="MenuClickLoadFiltersValues"/>-->
                <Separator />
                <MenuItem Header="_Print..."/>
                <!-- Click="MenuClickPrint"/>-->
                <MenuItem Header="_Print Preview"/>
                <!-- Click="MenuClickPrintPreview" />-->
                <MenuItem Header="_Print Setup"/>
                <!-- Click="MenuClickPrintSetup"/>-->
                <Separator />
                <MenuItem Header="_Recent File"/>
                <!-- Click="MenuClickRecentFile"/>-->
                <Separator />
                <MenuItem Header="_Exit" Click="MenuClickExit"/>
                <!-- Click="MenuClickExit"/>-->
            </MenuItem>
            <MenuItem Header="_Edit" >
                <MenuItem Header="Convert results" Click="MenuClickConvertresults"/>
                <MenuItem Header="Convert inversion results" Click="MenuClickConvertInversionResults"/>
                <MenuItem Header="Edit devices" Click="MenuClickEditDevices"/>
                <MenuItem Header="Load curves" Click="MenuClickLoadCurves"/>
                <MenuItem Header="_AddObject">
                    <MenuItem Header="_Standard"/>
                    <!-- Click="MenuClickStandard"/>-->
                    <MenuItem Header="_Custom"/>
                    <!-- Click="MenuClickCustom"/>-->
                </MenuItem>
                <MenuItem Header="_Add Layer"/>
                <!-- Click="MenuClickAddLayer"/>-->
                <MenuItem Header="_Add Receiver" >
                    <MenuItem Header="_Single"/>
                    <!-- Click="MenuClickSingle"/>-->
                    <MenuItem Header="_Group"/>
                    <!-- Click="MenuClickGroup"/>-->
                    <MenuItem Header="_Group Radial"/>
                    <!-- Click="MenuClickGroupRadial"/>-->
                    <MenuItem Header="_From File"/>
                    <!-- Click="MenuClickFromFile"/>-->
                </MenuItem>
                <MenuItem Header="_Add Line">
                    <Separator/>
                    <MenuItem Header="_AddObject" />
                </MenuItem>
                <MenuItem Header="_Zoom to Extent"/>
                <!-- Click="MenuClickZoomToExtent"/>-->
                <Separator/>
                <MenuItem Header="_Split Objects"/>
                <!-- Click="MenuClickSplitObjects"/>-->
                <Separator/>
                <MenuItem Header="_Copy..."/>
                <!-- Click="MenuClickCopy"/>-->
                <MenuItem Header="_Paste..."/>
                <!-- Click="MenuClickPaste"/>-->
                <MenuItem Header="_Delete"/>
                <!-- Click="MenuClickDelete"/>-->
                <MenuItem Header="_Move by Vector"/>
                <!-- Click="MenuClickMoveByVector"/>-->
                <MenuItem Header="_Copy by Vector"/>
                <!-- Click="MenuClickCopyByVector"/>-->
                <Separator/>
                <MenuItem x:Name="MenuItemUnloadBitmap" Header="_Unload to Bitmap" IsEnabled="false"/>
                <!-- Click="MenuClickUnloadToBitmap"/>-->
            </MenuItem>
            <MenuItem Header="_View" >
                <MenuItem Header="_Tool Bar"  IsCheckable="true" IsChecked="true"/>
                <!-- Click="MenuClickToolBar"/>-->
                <MenuItem Header="_StatusBar"  IsCheckable="true" IsChecked="true"/>
                <!-- Click="MenuClickStatusBar"/>-->
                <MenuItem Header="_Contrlol Bar"  IsCheckable="true" IsChecked="true" Click="MenuViewControlBar"/>
                <!-- Click="MenuClickContrlolBar" />-->
                <Separator/>
                <MenuItem Header="_View Mode" >
                    <MenuItem x:Name="MenuViewSixView" Header="_Six Views"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" IsChecked="true" Click="MenuClickSixViews" />
                    <MenuItem x:Name="MenuViewXYAndXZAndYZView" Header="_XY and XZ and YZ"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickXYAndXZAndYZViews"/>
                    <MenuItem x:Name="MenuViewXZAndPerspectiveAndYZView" Header="_XZ and perspective and YZ"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickXZAndPerspectiveAndYZView"/>
                    <!-- Click="MenuClickXYandXZ" />-->
                    <MenuItem x:Name="MenuViewXYView" Header="_XY"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickXYViews"/>
                    <!-- Click="MenuClickXY" />-->
                    <MenuItem x:Name="MenuViewXZView" Header="_XZ"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickXZViews"/>
                    <!-- Click="MenuClickXZ" />-->
                    <MenuItem x:Name="MenuViewYZView" Header="_YZ"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickYZViews"/>
                    <!-- Click="MenuClickYZ" />-->
                    <MenuItem x:Name="MenuViewPerspectiveView" Header="_Perspective"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickPerspectivViews"/>

                    <MenuItem x:Name="MenuViewGraphView" Header="_Graph"  local:MenuItemExtensions.GroupName="GroupView" IsCheckable="true" Click="MenuClickGraphViews"/>

                    <!-- Click="MenuClickPerspective" />-->
                </MenuItem>

                <MenuItem Header="_Load Mesh"/>
                <!-- Click="MenuClickLoadMesh" />-->
                <MenuItem Header="_Unload Mesh"/>
                <!-- Click="MenuClickUnloadMesh" />-->
                <MenuItem Header="_Show Mesh Section"/>
                <!-- Click="MenuClickShowMeshSection" />-->
                <MenuItem Header="_Hide Mesh Section"/>
                <!-- Click="MenuClickHideMeshSection" />-->
                <Separator/>
                <MenuItem Header="_Object RB Color"/>
                <!-- Click="MenuClickObjectRBColor" />-->
                <MenuItem Header="_Auto Scale"/>
                <!-- Click="MenuClickAutoScale" />-->
                <MenuItem Header="_Show Values"/>
                <!-- Click="MenuClickShowValues" />-->
                <MenuItem Header="_Relief Information"/>
                <!-- Click="MenuClickReliefInformation" />-->
                <Separator/>
                <MenuItem Header="_Palette"  IsCheckable="false" Click="MenuViewPaletteClick"/>
            </MenuItem>
            <MenuItem Header="_Settings" >
                <MenuItem Header="Configuration files" Click="MenuClickConfigurationFiles"/>
                <!-- Click="MenuClickGenerator"/>-->
                <MenuItem Header="_Generator"/>
                <!-- Click="MenuClickGenerator"/>-->
                <MenuItem Header="_Recievers"/>
                <!-- Click="MenuClickRecievers"/>-->
                <MenuItem Header="_Advanced Profiling"/>
                <!-- Click="MenuClickAdvancedProfiling"/>-->
                <Separator/>
                <MenuItem Header="_Read Gemir Settings"/>
                <!-- Click="MenuClickReadGemirSettings"/>-->
                <MenuItem Header="_Gemir Setting Dir"/>
                <!-- Click="MenuClickGemirSettingDir"/>-->
            </MenuItem>

            <MenuItem Header="_Calculations" >
                <MenuItem Header="Settings"
                Click="MenuClickCalculationSettings"/>
                <MenuItem Header="_Start 3D"/>
                <!-- Click="MenuClickStart3D"/>-->
                <Separator/>
                <MenuItem Header="_Parallel 3D"/>
                <!-- Click="MenuClickParallel3D" />-->
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom" Background="AliceBlue">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="300" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="200" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="100" />
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem>
                <TextBlock x:Name="lblCursorPosition" />
            </StatusBarItem>
            <Separator Grid.Column="1"/>
            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="StatusBarLeft"  Text="Ready" />
            </StatusBarItem>
            <Separator Grid.Column="3"/>
            <StatusBarItem Grid.Column="2">
                <TextBlock x:Name="StatusBarView"  Text="View:" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="4">
                <TextBlock x:Name="StatusBarldle"  Text="ldle" />
            </StatusBarItem>
            <Separator Grid.Column="5"/>
            <StatusBarItem Grid.Column="6">
                <TextBlock x:Name="StatusBarRight"  Text=" " />
            </StatusBarItem>
        </StatusBar>
        <DockPanel>
            <Grid x:Name="GridControlBar">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="5"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <ScrollViewer Grid.Row="0" HorizontalScrollBarVisibility="Auto"  VerticalScrollBarVisibility="Disabled">

                    <TabControl x:Name="TabControlMainWindow" SelectionChanged="TabControlMainWindow_SelectionChanged" >
                        <TabControl.Resources>
                            <Style TargetType="{x:Type Grid}">
                                <Setter Property="Background" Value="#FFD4D0C8"/>
                            </Style>
                        </TabControl.Resources>

                        <TabItem x:Name="TabItemModel" Header="Model">
                            <DockPanel>
                                <Grid
                                    AllowDrop="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="661*" />
                                        <ColumnDefinition Width="794*"/>
                                        <ColumnDefinition Width="190*"/>
                                        <ColumnDefinition Width="178*"/>
                                    </Grid.ColumnDefinitions>
                                    <DockPanel Grid.Column="0" >
                                        <Grid >
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23"/>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <Label Grid.Row="0" Content="Layers"  HorizontalContentAlignment="Center" Background="AntiqueWhite"/>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Margin" Value="0,0,10,0"/>
                                                    </Style>
                                                </StackPanel.Resources>
                                                <Button Content="add" Click="BAddNewLayer" Height="25" VerticalAlignment="Top"/>
                                                <Button Content="del" Click="BDeleteLayer"/>
                                                <Button Content="Build relief"/>
                                                <Button Content="Relief C"/>
                                                <Label Content="Relief mode"/>
                                                <ComboBox Width="64" />
                                                <CheckBox x:Name="CBVisibleLayers" Content="Vis. Layers" IsChecked = "{Binding Vis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"  VerticalAlignment="Center" Checked="CBVisibleLayersChecked" Unchecked="CBVisibleLayersUnchecked"/>
                                                <CheckBox x:Name="CheckBoxDrawLayersBounds" Content="Draw bounds"  VerticalAlignment="Center" Checked="CheckBoxDrawLayersBoundsChecked" Unchecked="CheckBoxDrawLayersBoundsChecked" Margin="0,5"/>
                                                <Label Content="Horizon" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                                                <TextBox x:Name="TextBoxHorizon" TextWrapping="Wrap" Text="TextBox" Width="84" KeyDown="TextBoxHorizon_KeyDown" LostFocus="TextBoxHorizon_LostFocus"/>
                                            </StackPanel>
                                            <DataGrid  Grid.Row="2" CanUserAddRows="False"  CanUserSortColumns="False" AlternatingRowBackground="LightBlue" AlternationCount="2" CanUserDeleteRows="False"  x:Name="DGLayers"  ScrollViewer.CanContentScroll="True" 
												ScrollViewer.VerticalScrollBarVisibility="Auto"  Visibility="Visible"  Background="White" AutoGenerateColumns="False" CellEditEnding="DGCellEditEnding" BeginningEdit="DGBeginEdit"   
                                                        MouseRightButtonUp="DGLayers_MouseRightButtonUp" MouseLeftButtonUp="DGLayers_MouseLeftButtonUp">
                                                <DataGrid.Resources>
                                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00894a"/>
                                                    <Style TargetType="{x:Type DataGridRow}">
                                                        <EventSetter Event="Control.MouseDoubleClick" Handler="MouseDownLayerDG"/>
                                                    </Style>
                                                </DataGrid.Resources>

                                                <DataGrid.Columns>
                                                    <!--Binding = "{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={localGrid:RowToIndexConverter}}"-->
                                                    <DataGridTextColumn Header="N" IsReadOnly = "true"  Width="28" Binding = "{Binding Num}"/>
                                                    <DataGridTextColumn IsReadOnly = "true"  Header="C" >


                                                        <DataGridTextColumn.CellStyle>
                                                            <Style TargetType="{x:Type DataGridCell}">

                                                                <Setter Property="Background">
                                                                    <Setter.Value>
                                                                        <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>

                                                        </DataGridTextColumn.CellStyle>

                                                    </DataGridTextColumn>

                                                    <DataGridTextColumn Header="H,m"  Width="38"  Binding = "{Binding H, UpdateSourceTrigger=LostFocus}">
                                                        <DataGridTextColumn.CellStyle>
                                                            <Style TargetType="{x:Type DataGridCell}">


                                                                <EventSetter Event="UIElement.LostFocus" Handler="DGLayersFocusLostH" />
                                                            </Style>

                                                        </DataGridTextColumn.CellStyle>
                                                    </DataGridTextColumn>
                                                    <DataGridTextColumn Header="RoH,Omm"  Width="62"  Binding = "{Binding RoH, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridTextColumn Header="RoV,Omm"  Width="62"  Binding = "{Binding RoV, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridComboBoxColumn  x:Name="DGCBDepsLayers" Header="Dep."  Width="40" ItemsSource="{Binding}" SelectedValuePath="Id" DisplayMemberPath="Title"  SelectedValueBinding = "{Binding Dep, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridTextColumn Header="Alpha"  Width="48"  Binding = "{Binding Alpha, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridTextColumn Header="T0"  Width="38" Binding = "{Binding T0, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridTextColumn Header="Beta"  Width="48" Binding = "{Binding Beta, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridTextColumn Header="C"  Width="28" Binding = "{Binding C, UpdateSourceTrigger=LostFocus}"/>
                                                    <DataGridCheckBoxColumn Header="Rel."  Width="38" Binding = "{Binding Rel, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                                    <DataGridCheckBoxColumn Header="RP"  Width="38" Binding = "{Binding Relief.ToDraw, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>

                                                    <DataGridCheckBoxColumn Header="Vis." Width="38" Binding = "{Binding Vis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                        <DataGridCheckBoxColumn.EditingElementStyle>
                                                            <Style TargetType="{x:Type CheckBox}">
                                                                <Setter Property="HorizontalAlignment" Value="Center" />
                                                                <EventSetter Event="ToggleButton.Checked" Handler="DGLayersCheckedVis" />
                                                                <EventSetter Event="ToggleButton.Unchecked" Handler="DGLayersCheckedVis" />
                                                            </Style>
                                                        </DataGridCheckBoxColumn.EditingElementStyle>

                                                    </DataGridCheckBoxColumn>
                                                    <DataGridTemplateColumn Header="Load relief" Width="Auto">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Button Click="LoadReliefClick" Content="Load"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>
                                                    <DataGridTemplateColumn Header="Fitting" Width="Auto">
                                                        <DataGridTemplateColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <Button Click="EditFitClick" Content="Edit"/>
                                                            </DataTemplate>
                                                        </DataGridTemplateColumn.CellTemplate>
                                                    </DataGridTemplateColumn>

                                                </DataGrid.Columns>

                                            </DataGrid>
                                        </Grid>
                                    </DockPanel>
                                    <DockPanel Grid.Column="1">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23"/>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <Label Grid.Row="0" Content="Objects" HorizontalContentAlignment="Center" Background="AntiqueWhite"/>
                                            <StackPanel Grid.Row="1" Orientation="Horizontal">
                                                <StackPanel.Resources>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Margin" Value="0,0,10,0"/>
                                                    </Style>
                                                </StackPanel.Resources>
                                                <Button Content="add" Click="BAddNewObject"/>

                                                <Button Content="del" Click="BDelObject"/>
                                                <Button Content="Constract"/>
                                                <Button Content="Hex"/>
                                            </StackPanel>

                                            <Grid Width="auto" Height="auto" Margin="0" Grid.Row="2">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="124*"/>
                                                    <RowDefinition Height="123*"/>
                                                </Grid.RowDefinitions>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="573*"/>
                                                    <ColumnDefinition Width="121*"/>
                                                    <ColumnDefinition Width="120*"/>
                                                </Grid.ColumnDefinitions>
                                                <DataGrid
                                                    Background="White"
                                                    CanUserAddRows="False"
                                                    CanUserSortColumns="False"
                                                    AlternatingRowBackground="LightBlue"
                                                    AlternationCount="2"
                                                    CanUserDeleteRows="False"
                                                    x:Name="DGObjects"
                                                    ScrollViewer.CanContentScroll="True"
                                                    ScrollViewer.VerticalScrollBarVisibility="Auto"
                                                    Visibility="Visible"
                                                    AutoGenerateColumns="False"
                                                    CellEditEnding="DGCellEditEnding"
                                                    BeginningEdit="DGBeginEdit"
                                                    SelectionChanged="ObjectsSelectionChanged"
                                                    MouseRightButtonUp="DGObjects_MouseRightButtonUp"
                                                    MouseLeftButtonUp="DGObjects_MouseLeftButtonUp"
                                                        Grid.Column="0" Grid.RowSpan="2"
                                                    >
                                                    <DataGrid.Resources>
                                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00894a"/>
                                                        <Style TargetType="{x:Type DataGridRow}">
                                                            <EventSetter Event="Control.MouseDoubleClick" Handler="MouseDownObjectDG"/>
                                                        </Style>
                                                    </DataGrid.Resources>
                                                    <DataGrid.Columns>
                                                        <!--Binding = "{Binding RelativeSource={RelativeSource AncestorType=DataGridRow}, Converter={localGrid:RowToIndexConverter}}"-->
                                                        <DataGridTextColumn Header="N" IsReadOnly = "true" Binding = "{Binding Num}"   Width="28"/>
                                                        <DataGridTextColumn Header="Level" IsReadOnly = "False" Binding = "{Binding Level}" Width="Auto"/>
                                                        <DataGridCheckBoxColumn Header="Hex" Width="38" Binding = "{Binding IsHex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                                <Style TargetType="{x:Type CheckBox}">
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <EventSetter Event="ToggleButton.Checked" Handler="DGObjectsCheckedHex" />
                                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DGObjectsCheckedHex" />
                                                                </Style>
                                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                                        </DataGridCheckBoxColumn>
                                                        <DataGridTextColumn Header="C"  IsReadOnly = "true" Width="28">
                                                            <DataGridTextColumn.CellStyle>
                                                                <Style TargetType="{x:Type DataGridCell}">

                                                                    <Setter Property="Background">
                                                                        <Setter.Value>
                                                                            <SolidColorBrush Color="{Binding BackgroundColor}"/>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                </Style>

                                                            </DataGridTextColumn.CellStyle>

                                                        </DataGridTextColumn>
                                                        <DataGridTextColumn Header="Name" Binding = "{Binding Name, UpdateSourceTrigger=LostFocus}"  Width="48"/>
                                                        <DataGridTextColumn Header="RoH,Omm" Binding = "{Binding RoH, UpdateSourceTrigger=LostFocus}"  Width="62"/>
                                                        <DataGridTextColumn Header="RoV,Omm" Binding = "{Binding RoV, UpdateSourceTrigger=LostFocus}"  Width="62"/>
                                                        <DataGridComboBoxColumn Header="Dep." x:Name="DGCBDepsObjects"  Width="40" ItemsSource="{Binding}" SelectedValuePath="Id" DisplayMemberPath="Title"  SelectedValueBinding = "{Binding Dep, UpdateSourceTrigger=LostFocus}"/>
                                                        <DataGridTextColumn Header="Alpha" Binding = "{Binding Alpha, UpdateSourceTrigger=LostFocus}"  Width="48"/>
                                                        <DataGridTextColumn Header="T0"  Binding = "{Binding T0, UpdateSourceTrigger=LostFocus}"  Width="34"/>
                                                        <DataGridTextColumn Header="Beta"  Binding = "{Binding Beta, UpdateSourceTrigger=LostFocus}"  Width="48"/>
                                                        <DataGridTextColumn Header="C"  Binding = "{Binding C, UpdateSourceTrigger=LostFocus}"  Width="28"/>
                                                        <DataGridCheckBoxColumn Header="Vis." Width="38" Binding = "{Binding Vis, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                                <Style TargetType="{x:Type CheckBox}">
                                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                                    <EventSetter Event="ToggleButton.Checked" Handler="DGObjectsCheckedVis" />
                                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DGObjectsCheckedVis" />
                                                                </Style>
                                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                                        </DataGridCheckBoxColumn>
                                                    </DataGrid.Columns>
                                                </DataGrid>

                                                <DataGrid CellEditEnding="DGMinMaxCObject_CellEditEnding" x:Name="DGMinMaxCObject" AutoGenerateColumns="False" Background="White" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserAddRows="False" VerticalAlignment="Stretch" Grid.Column="1" Margin="0" Grid.Row="0">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Header=""   IsReadOnly="True" Width="8"   Binding = "{Binding Converter={localGrid:RowToCoordinateConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
                                                        <DataGridTextColumn Header="min"    Width="38" Binding="{Binding Min, UpdateSourceTrigger=LostFocus}" />
                                                        <DataGridTextColumn Header="max"    Width="38" Binding="{Binding Max, UpdateSourceTrigger=LostFocus}" />

                                                    </DataGrid.Columns>

                                                </DataGrid>
                                                <DataGrid CellEditEnding="DGHexObject_CellEditEnding" x:Name="DGHexObject" AutoGenerateColumns="False" Background="White" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserAddRows="False" VerticalAlignment="Stretch" Margin="0,0,0,0" Grid.Column="2" Grid.Row="0">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Header=""   IsReadOnly="True" Width="8"   Binding = "{Binding Name}" />
                                                        <DataGridTextColumn Header="Value"    Width="38" Binding="{Binding Value, UpdateSourceTrigger=LostFocus}" />

                                                    </DataGrid.Columns>

                                                </DataGrid>
                                                <DataGrid Grid.Row="1" CellEditEnding="DGBoundingBox_CellEditEnding" x:Name="dataGridBoundingBox" AutoGenerateColumns="False" Background="White" Height="auto" CanUserDeleteRows="False" CanUserSortColumns="False" CanUserAddRows="False" Margin="0" Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Stretch">
                                                    <DataGrid.Columns>
                                                        <DataGridTextColumn Header=""   IsReadOnly="True" Width="8"   Binding = "{Binding axisName}" />
                                                        <DataGridTextColumn Header="min"    Width="38" Binding="{Binding minValue, UpdateSourceTrigger=LostFocus}" />
                                                        <DataGridTextColumn Header="max"    Width="38" Binding="{Binding maxValue, UpdateSourceTrigger=LostFocus}" />

                                                    </DataGrid.Columns>

                                                </DataGrid>
                                            </Grid>

                                            <CheckBox x:Name="CheckBoxDrawObjectsBounds" Content="Draw bounds" HorizontalAlignment="Left" Margin="161,5,0,0" Grid.Row="1" VerticalAlignment="Top" Width="96" Checked="CheckBoxDrawBounds_Checked" Unchecked="CheckBoxDrawBounds_Checked"/>

                                        </Grid>
                                    </DockPanel>
                                    <DockPanel Grid.Column="2">
                                        <Grid>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="23"/>
                                                <RowDefinition Height="26"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Label Grid.Row="0" Content="Stacks" HorizontalContentAlignment="Center" Background="AntiqueWhite"/>
                                            <DataGrid  Background="White" CanUserAddRows="False"  CanUserSortColumns="False" CanUserDeleteRows="False"  x:Name="DGStacks"  ScrollViewer.CanContentScroll="True" 
													ScrollViewer.VerticalScrollBarVisibility="Auto" AutoGenerateColumns="False" SelectionChanged="DGStacksSelectionChanged" Grid.Row="2" 
                                                    MouseRightButtonUp="DGStacks_MouseRightButtonUp"
                                                    MouseLeftButtonUp="DGStacks_MouseLeftButtonUp"
                                                       >
                                                <DataGrid.Resources>
                                                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00894a"/>
                                                    <Style TargetType="{x:Type DataGridRow}">
                                                        <EventSetter Event="Control.MouseDoubleClick" Handler="MouseDownDGStacks"/>
                                                    </Style>
                                                </DataGrid.Resources>
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="N" IsReadOnly = "true" Binding = "{Binding Number}" Width="25" CanUserResize="False"/>
                                                    <DataGridTextColumn Header="Name" Binding = "{Binding Name, UpdateSourceTrigger=LostFocus}" Width="50" IsReadOnly="true"/>
                                                    <DataGridTextColumn Header="LayerB" Binding = "{Binding LayerBottom, UpdateSourceTrigger=LostFocus}" Width="50" IsReadOnly="true"/>
                                                    <DataGridTextColumn Header="LayerT" Binding = "{Binding LayerTop, UpdateSourceTrigger=LostFocus}" Width="50" IsReadOnly="true"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <Button Content="Add" Click="BAddStack" Grid.Row="1" Width="30" HorizontalAlignment="Left" Margin="0,0,0,0"/>
                                            <Button Content="Del" Click="BDelStack" Grid.Row="1" Width="30" HorizontalAlignment="Left" Margin="40,0,0,0"/>
                                            <Button Content="Cpy" Click="BCpyStack" Grid.Row="1" Width="30" HorizontalAlignment="Left" Margin="80,0,0,0"/>
                                            <Button Content="Build" Click="BBuildStacks" Grid.Row="1" Width="30" HorizontalAlignment="Left" Margin="120,0,0,0"/>
                                            <Button Content="Clear" Click="BClearStacks" Grid.Row="1" Width="30" HorizontalAlignment="Left" Margin="160,0,0,0" Height="26" VerticalAlignment="Top"/>

                                        </Grid>
                                    </DockPanel>
                                </Grid>
                            </DockPanel>
                        </TabItem>
                        <TabItem x:Name="TabItemPlot" Header="Plots">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="2*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <DockPanel Grid.Column="0" >
                                    <Grid >
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23"/>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Label Grid.Row="0" Content="Plots"  HorizontalContentAlignment="Center" Background="AntiqueWhite"/>
                                        <StackPanel Grid.Row="1" Orientation="Horizontal">
                                            <StackPanel.Resources>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Margin" Value="0,0,5,0"/>
                                                </Style>
                                            </StackPanel.Resources>
                                            <Button Content="add"/>
                                            <Button Content="del"/>
                                            <Button Content="sum"/>
                                            <Button Content="res"/>
                                            <ComboBox Width="64" />
                                            <ComboBox Width="64" />
                                            <Button Content="Mult"/>
                                            <TextBox Width="70" Background="White" />
                                            <Button Content="Add"/>
                                            <TextBox Width="70" Background="White"/>
                                            <Button Content="Auto scale"/>
                                            <Button Content="Save"/>
                                        </StackPanel>
                                        <DataGrid Grid.Row="2"  Background="White" AutoGenerateColumns="False" CanUserAddRows="True" >
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="N"  Width="28"/>
                                                <DataGridTextColumn Header="C"  Width="28"/>
                                                <DataGridTextColumn Header="Name"  Width="50"/>
                                                <DataGridTextColumn Header="tmin,(ms)"  Width="70"/>
                                                <DataGridComboBoxColumn Header="tmax,(ms)"  Width="70"/>
                                                <DataGridTextColumn Header="mV(min)"  Width="63"/>
                                                <DataGridTextColumn Header="mV(max)"  Width="63"/>
                                                <DataGridTextColumn Header="Vis."  Width="38"/>
                                                <DataGridTextColumn Header="Path"  Width="48"/>
                                            </DataGrid.Columns>

                                        </DataGrid>
                                    </Grid>
                                </DockPanel>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemField" Header="Field" >
                            <Grid Height="Auto" Width="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FFE5E5E5" Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="158*"/>
                                    <ColumnDefinition Width="208*"/>
                                    <ColumnDefinition Width="1131*"/>
                                </Grid.ColumnDefinitions>

                                <Label Content="Field type" HorizontalAlignment="Left" Margin="10,26,0,0" VerticalAlignment="Top" Width="120" HorizontalContentAlignment="Center"/>
                                <ComboBox x:Name="ComboBoxFieldType" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="ComboBoxFieldType_SelectionChanged"/>
                                <Label Content="Observing system" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="0" Background="LightBlue" BorderBrush="Gray" BorderThickness="1" Margin="0"/>

                                <Label Content="Objects to draw" HorizontalAlignment="Left" Margin="10,74,0,0" VerticalAlignment="Top" Width="120" HorizontalContentAlignment="Center"/>
                                <CheckBox x:Name="CheckBoxLayers" Content="Layers" HorizontalAlignment="Left" Margin="10,100,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxLayers_Checked" Unchecked="CheckBoxLayers_Checked"/>
                                <CheckBox x:Name="CheckBoxObjects" Content="Objects" HorizontalAlignment="Left" Margin="10,115,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxObjects_Checked" Unchecked="CheckBoxObjects_Checked"/>
                                <CheckBox x:Name="CheckBoxInversionModel" Content="Inversion model" HorizontalAlignment="Left" Margin="10,130,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxInversionModel_Checked" Unchecked="CheckBoxInversionModel_Checked"/>
                                <CheckBox x:Name="CheckBoxInversionResult" Content="Inversion result" HorizontalAlignment="Left" Margin="10,145,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxInversionResult_Checked" Unchecked="CheckBoxInversionResult_Checked"/>
                                <CheckBox x:Name="CheckBoxMesh" Content="Mesh" HorizontalAlignment="Left" Margin="10,160,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxMesh_Checked" Unchecked="CheckBoxMesh_Checked"/>
                                <CheckBox x:Name="CheckBoxAuto" Content="Auto" HorizontalAlignment="Left" Margin="10,175,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxAuto_Checked" Unchecked="CheckBoxAuto_Checked"/>
                                <Button x:Name="ButtonUpdatepalette" Content="Update palette" HorizontalAlignment="Left" Margin="10,190,0,0" VerticalAlignment="Top" Width="138" Click="ButtonUpdatepalette_Click"/>

                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemObserving" Header="Observing">
                            <Grid Background="#FFE5E5E5" Margin="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="131"/>
                                    <ColumnDefinition Width="155*"/>
                                    <ColumnDefinition Width="214*"/>
                                    <ColumnDefinition Width="135"/>
                                    <ColumnDefinition Width="258*"/>
                                    <ColumnDefinition Width="226"/>
                                    <ColumnDefinition Width="325*"/>
                                    <ColumnDefinition Width="133"/>
                                    <ColumnDefinition Width="248"/>
                                </Grid.ColumnDefinitions>
                                <Button Name ="ButtonLoadObservingSystem" Margin="6,54,7,0" VerticalAlignment="Top" Width="118" Height="43" Click="ButtonLoadObservingSystem_Click" HorizontalAlignment="Center">
                                    <TextBlock Text="Load observing system" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Button>
                                <Label Content="Impulse length" HorizontalAlignment="Right" Margin="0,101,140,0" VerticalAlignment="Top" Height="23" Width="107" Grid.Column="8"/>
                                <Label Content="Pause length" HorizontalAlignment="Right" Margin="0,126,140,0" VerticalAlignment="Top" Height="23" Width="107" Grid.Column="8"/>
                                <Label Content="Impulse count" HorizontalAlignment="Right" Margin="0,151,140,0" VerticalAlignment="Top" Height="23" Width="107" Grid.Column="8"/>
                                <TextBox x:Name="TextBoxImpLength" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxImpLength_LostFocus" KeyDown="TextBoxImpLength_KeyDown" Grid.Column="8" Margin="0,101,10,0"/>
                                <TextBox x:Name="TextBoxImpPauseLength" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxImpPauseLength_LostFocus" KeyDown="TextBoxImpPauseLength_KeyDown" Margin="0,126,10,0" Grid.Column="8"/>
                                <TextBox x:Name="TextBoxImpCount" HorizontalAlignment="Right" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxImpCount_LostFocus" KeyDown="TextBoxImpCount_KeyDown" Margin="0,151,10,0" Grid.Column="8"/>
                                <ComboBox x:Name="ComboBoxObservingSystemType" HorizontalAlignment="Center" Margin="6,27,7,0" VerticalAlignment="Top" Width="118" Height="22"/>
                                <ComboBox x:Name ="ComboBoxGroupingMethod" HorizontalAlignment="Center" Margin="6,102,7,0" VerticalAlignment="Top" Width="118" Height="22"/>
                                <Button x:Name ="ButtonMakeGroups" Content="Make groups" HorizontalAlignment="Center" Margin="6,129,7,0" VerticalAlignment="Top" Width="118" Click="ButtonMakeGroups_Click" Height="20"/>
                                <Button x:Name="ButtonMakeGroupsDirectory" Content="Make directory" HorizontalAlignment="Center" Margin="6,137,7,0" VerticalAlignment="Top" Width="118" Click="ButtonMakeGroupsDirectory_Click" Height="20" Visibility="Hidden"/>
                                <DataGrid
                                Margin="0, 27, 0, 0"
                                Background="White" 
                                CanUserAddRows="False"  
                                CanUserSortColumns="False" 
                                AlternatingRowBackground="LightBlue" 
                                AlternationCount="2" 
                                CanUserDeleteRows="True"
                                x:Name="DataGridObservingSystem"
                                ScrollViewer.CanContentScroll="True" 
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Visibility="Visible"
                                AutoGenerateColumns="False"
                                SelectionChanged="ObjectsSelectionChanged" 
                                IsSynchronizedWithCurrentItem="True"
                                Grid.Column="1" 
                                MouseRightButtonUp="DataGridObservingSystem_MouseRightButtonUp"
                                MouseLeftButtonUp="DataGridObservingSystem_MouseLeftButtonUp" Grid.ColumnSpan="2"
                                    >
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00894a"/>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <EventSetter Event="Control.MouseDoubleClick" Handler="ProfileColorSelect"/>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Active" 
                                            Width="Auto" 
                                            Binding = "{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridObserveSystem_ActiveCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridObserveSystem_ActiveCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn IsReadOnly = "true"  Header="Color" Width="Auto" >
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{Binding Color}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>

                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn 
                                            Header="Pos. count" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding PositionsCount}"   
                                            Width="Auto" CanUserReorder="False"/>
                                        <DataGridTemplateColumn Header="Show info" Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Click="ShowInfo_Click" Content="Info"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                        <DataGridTextColumn 
                                            Header="Device" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding DeviceName}"   
                                            Width="Auto" CanUserReorder="False"/>
                                    </DataGrid.Columns>
                                </DataGrid>



                                <Grid x:Name="GridDrawing" Margin="0" HorizontalAlignment="Stretch" Grid.Column="4" Background="#FFE5E5E5">
                                    <DataGrid
                                		Background="White" 
                                		CanUserAddRows="False"  
                                		CanUserSortColumns="False" 
                                		AlternatingRowBackground="LightBlue" 
                                		AlternationCount="2" 
                                		CanUserDeleteRows="True"
                                		x:Name="DataGridTimes"
                                		ScrollViewer.CanContentScroll="True" 
                                		ScrollViewer.VerticalScrollBarVisibility="Auto"
                                		Visibility="Visible"
                                		AutoGenerateColumns="False"
                                		IsSynchronizedWithCurrentItem="True"
                                		MouseRightButtonUp="DataGridTimes_MouseRightButtonUp"
                                		MouseLeftButtonUp="DataGridTimes_MouseLeftButtonUp"
                                		HorizontalAlignment="Stretch"
                                		VerticalAlignment="Stretch" Width="Auto" Margin="0,27,0,0"
                                                >
                                        <DataGrid.Columns>
                                            <DataGridTextColumn 
                                				Header="N" 
                                				IsReadOnly = "true" 
                                				Binding = "{Binding Number}"   
                                				Width="Auto"/>
                                            <DataGridTextColumn 
                                				Header="Time, sec."
                                				IsReadOnly = "false"
                                				Binding = "{Binding Time}"
                                				Width="Auto" CanUserReorder="False"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                    <Label Content="Time mesh" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Background="LightBlue" BorderBrush="Gray" BorderThickness="1"/>
                                </Grid>
                                <Grid x:Name="GridAlignment" Margin="0" Grid.Column="5" Background="#FFE5E5E5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="113"/>
                                    </Grid.ColumnDefinitions>
                                    <Label Content="X0" HorizontalAlignment="Right" VerticalAlignment="Top" Height="26" Width="24" Margin="0,27,0,0"/>
                                    <Label Content="Y0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,53,0,0" Height="26" Width="23"/>
                                    <Label Content="Z0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,79,0,0" Height="26" Width="23"/>
                                    <Label Content="XR" HorizontalAlignment="Right" VerticalAlignment="Top" Height="26" Width="24" Margin="0,136,0,0"/>
                                    <Label Content="YR" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,164,0,0" Height="26" Width="23"/>
                                    <Label Content="Angle" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,105,0,0" Height="26" Width="41"/>
                                    <Label Content="Point size" HorizontalAlignment="Right" Margin="0,192,0,0" VerticalAlignment="Top" Width="60" Height="26" />
                                    <TextBox x:Name="TextBoxX0" Height="23" Margin="0,30,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxX0_LostFocus" KeyDown="TextBoxX0_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxY0" Height="23" Margin="0,56,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxY0_LostFocus" KeyDown="TextBoxY0_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxZ0" Height="23" Margin="0,82,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxZ0_LostFocus" KeyDown="TextBoxZ0_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxXR" Height="23" Margin="0,136,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxXR_LostFocus" KeyDown="TextBoxXR_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxYR" Height="23" Margin="0,164,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxYR_LostFocus" KeyDown="TextBoxYR_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxAngle" Height="23" Margin="0,108,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" LostFocus="TextBoxAngle_LostFocus" KeyDown="TextBoxAngle_KeyDown" Grid.Column="1" />
                                    <TextBox x:Name="TextBoxRecieverPointSize" HorizontalAlignment="Stretch" Height="23" Margin="0,192,0,0" TextWrapping="Wrap" VerticalAlignment="Top" Width="113" Text="" LostFocus="TextBoxRecieverPointSize_LostFocus" KeyDown="TextBoxRecieverPointSize_KeyDown" Grid.Column="1" />
                                    <CheckBox x:Name="CheckBoxDrawRecievers" Content="Draw recievers" HorizontalAlignment="Right" Margin="0,218,0,0" VerticalAlignment="Top" Width="107" Checked="CheckBoxDrawRecievers_Checked" Unchecked="CheckBoxDrawRecievers_Checked" Height="15" Grid.Column="0"/>
                                    <CheckBox x:Name="CheckBoxDrawGenerators" Content="Draw generators" HorizontalAlignment="Right" Margin="0,236,0,0" VerticalAlignment="Top" Checked="CheckBoxDrawGenerators_Checked" Unchecked="CheckBoxDrawGenerators_Checked" Height="15" Width="107"/>
                                    <CheckBox x:Name="CheckBoxDrawRecieversLabels" Content="Draw labels" HorizontalAlignment="Right" Margin="0,253,0,0" VerticalAlignment="Top" Checked="CheckBoxDrawRecieversLabels_Checked" Unchecked="CheckBoxDrawRecieversLabels_Checked" Height="15" Width="107"/>
                                    <Button x:Name="ButtonSelectRecieverPointColor" Content="" HorizontalAlignment="Left" Margin="10,220,0,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonSelectRecieverPointColor_Click" Grid.Column="1" >
                                        <Button.ToolTip>
                                            <ToolTip Background="#90004455">
                                                <TextBlock Margin="3" Foreground="White">Point color</TextBlock>
                                            </ToolTip>
                                        </Button.ToolTip>
                                    </Button>
                                    <Label Content="Rotation/Drawing" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.ColumnSpan="2" Height="26" Background="LightBlue" BorderBrush="Gray" BorderThickness="1"/>

                                </Grid>
                                <DataGrid
                                    Grid.Column="6"
                                Margin="0, 27, 0, 0"
                                Background="White" 
                                CanUserAddRows="False"  
                                CanUserSortColumns="False" 
                                AlternatingRowBackground="LightBlue" 
                                AlternationCount="2" 
                                CanUserDeleteRows="False"
                                x:Name="DataGridGroups"
                                ScrollViewer.CanContentScroll="True" 
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Visibility="Visible"
                                AutoGenerateColumns="False"
                                MouseRightButtonUp="DataGridGroups_MouseRightButtonUp"
                                SelectionChanged="ObjectsSelectionChanged" IsSynchronizedWithCurrentItem="True" >
                                    <DataGrid.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="#00894a"/>
                                        <Style TargetType="{x:Type DataGridRow}">
                                            <EventSetter Event="Control.MouseDoubleClick" Handler="GroupColorSelect"/>
                                        </Style>
                                    </DataGrid.Resources>
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Active" 
                                            Width="Auto" 
                                            Binding = "{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridGroups_ActiveCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridGroups_ActiveCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn IsReadOnly = "true"  Header="Color" Width="Auto" >
                                            <DataGridTextColumn.CellStyle>
                                                <Style TargetType="{x:Type DataGridCell}">
                                                    <Setter Property="Background">
                                                        <Setter.Value>
                                                            <SolidColorBrush Color="{Binding Color}"/>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>

                                            </DataGridTextColumn.CellStyle>
                                        </DataGridTextColumn>
                                        <DataGridTextColumn 
                                            Header="Pos. count" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding PositionsCount}"   
                                            Width="Auto" CanUserReorder="False"/>
                                        <DataGridTemplateColumn Header="Show info" Width="Auto">
                                            <DataGridTemplateColumn.CellTemplate>
                                                <DataTemplate>
                                                    <Button Click="ShowGroupInfo_Click" Content="Info"/>
                                                </DataTemplate>
                                            </DataGridTemplateColumn.CellTemplate>
                                        </DataGridTemplateColumn>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Label Content="Current" Grid.Column="8" HorizontalAlignment="Right" Margin="0,27,140,0" VerticalAlignment="Top" Height="23" Width="107"/>
                                <TextBox x:Name="TextBoxCurrent" Grid.Column="8" HorizontalAlignment="Right" Height="23" Margin="0,27,10,0" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxCurrent_LostFocus" KeyDown="TextBoxCurrent_KeyDown"/>
                                <Label Content="Generator rounds" Grid.Column="8" HorizontalAlignment="Right" Margin="0,50,140,0" VerticalAlignment="Top" Height="23" Width="107"/>
                                <TextBox x:Name="TextBoxRoundsGen" Grid.Column="8" HorizontalAlignment="Right" Height="23" Margin="0,50,10,0" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxRoundsGen_LostFocus" KeyDown="TextBoxRoundsGen_KeyDown"/>
                                <Label Content="Reciever rounds" Grid.Column="8" HorizontalAlignment="Right" Margin="0,73,140,0" VerticalAlignment="Top" Height="23" Width="107"/>
                                <TextBox x:Name="TextBoxRoundsRec" Grid.Column="8" HorizontalAlignment="Right" Height="23" Margin="0,73,10,0" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxRoundsRec_LostFocus" KeyDown="TextBoxRoundsRec_KeyDown"/>
                                <ComboBox x:Name="ComboBoxExperimentalCurvesType" Grid.Column="3" HorizontalAlignment="Stretch" Margin="10,27,10,0" VerticalAlignment="Top" Width="Auto" Height="22"/>
                                <Button Name ="ButtonLoadCurves" Margin="10,54,10,0" VerticalAlignment="Top" Width="Auto" Height="43" Click="ButtonLoadCurves_Click" HorizontalAlignment="Stretch" Grid.Column="3">
                                    <TextBlock Text="Load experimental curves" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Button>
                                <CheckBox x:Name="CheckBoxSpecialProfile" Content="Special profile" HorizontalAlignment="Left" Margin="10,154,0,0" VerticalAlignment="Top" Width="119" Checked="CheckBoxSpecialProfile_Checked" Height="15"/>
                                <CheckBox x:Name="CheckBoxRenumberGroups" Content="Renumber groups" HorizontalAlignment="Left" Margin="10,169,0,0" VerticalAlignment="Top" Width="119" Checked="CheckBoxRenumberGroups_Checked" Height="15"/>
                                <Label Content="Experimental data" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="3" Background="LightBlue" BorderBrush="Gray" BorderThickness="1"/>
                                <Label Content="Observing system" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="0" Background="LightBlue" BorderBrush="Gray" BorderThickness="1"/>
                                <Label Content="Profiles" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="1" Background="LightBlue" BorderBrush="Gray" BorderThickness="1" Grid.ColumnSpan="2"/>
                                <Label Content="Groups" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="6" Margin="0,0,0,0" Background="LightBlue" BorderBrush="Gray" BorderThickness="1" Grid.ColumnSpan="2"/>
                                <Label Content="Source parameters" Height="26" HorizontalAlignment="Stretch" VerticalAlignment="Top" Width="Auto" HorizontalContentAlignment="Center" Grid.Column="8" Background="LightBlue" BorderBrush="Gray" BorderThickness="1"/>
                                <Label Content="Path to curves" Grid.Column="3" HorizontalAlignment="Left" Margin="10,102,0,0" VerticalAlignment="Top" Width="115" Height="26"/>
                                <Label x:Name="LabelPathToCurves" Grid.Column="3" HorizontalAlignment="Left" Margin="10,128,0,0" VerticalAlignment="Top" Width="115" Height="73" BorderBrush="Black" BorderThickness="1">
                                    <Label.Content>
                                        <TextBlock x:Name="TextBlockPathToCurves" TextWrapping="Wrap"></TextBlock>
                                    </Label.Content>
                                </Label>

                                <Button Name ="ButtonLoadNormalField" Margin="0,54,0,0" VerticalAlignment="Top" Width="Auto" Height="43" Click="ButtonLoadNormalField_Click" HorizontalAlignment="Stretch" Grid.Column="7">
                                    <TextBlock Text="Load normal field" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Button>
                                <Label Content="Path to field" Grid.Column="7" HorizontalAlignment="Left" Margin="10,102,0,0" VerticalAlignment="Top" Width="115" Height="26"/>
                                <Label x:Name="LabelPathToNormalField" Grid.Column="7" HorizontalAlignment="Left" Margin="10,128,0,0" VerticalAlignment="Top" Width="115" Height="73" BorderBrush="Black" BorderThickness="1">
                                    <Label.Content>
                                        <TextBlock x:Name="TextBlockPathToNormalField" TextWrapping="Wrap"></TextBlock>
                                    </Label.Content>
                                </Label>
                                <ComboBox x:Name="ComboBoxUnloadExperimentalCurvesType" Grid.Column="3" HorizontalAlignment="Stretch" Margin="10,206,10,0" VerticalAlignment="Top" Width="Auto" Height="22"/>
                                <Button x:Name ="ButtonUnloadCurves" Margin="10,233,10,0" VerticalAlignment="Top" Width="Auto" Height="43" Click="ButtonUnloadCurves_Click" HorizontalAlignment="Stretch" Grid.Column="3">
                                    <TextBlock Text="Unload experimental curves" TextWrapping="Wrap" TextAlignment="Center"/>
                                </Button>
                                <Button x:Name ="ButtonExportObserving" Content="Export observing" HorizontalAlignment="Center" Margin="6,189,7,0" VerticalAlignment="Top" Width="118" Click="ButtonExportObserving_Click" Height="20"/>
                                <Button x:Name ="ButtonImportObserving_Copy" Content="Import observing" HorizontalAlignment="Center" Margin="6,214,7,0" VerticalAlignment="Top" Width="118" Click="ButtonImportObserving_Click" Height="20"/>

                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemCalculations" Header="Calculations">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="1044"/>
                                    <ColumnDefinition Width="264*"/>
                                </Grid.ColumnDefinitions>
                                <TabControl Grid.Column="0" HorizontalAlignment="Stretch" Height="Auto" Margin="0,0,349,0" VerticalAlignment="Stretch" Width="Auto" Grid.ColumnSpan="2">
                                    <TabItem Header="IP">
                                        <Grid Background="#FFE5E5E5">
                                            <Button x:Name="ButtonStartCalculationVP" HorizontalAlignment="Right" Margin="285,96,0,0" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartCalculationVP_Click">
                                                <TextBlock Text="Start calculation" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>

                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1VP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1VP_LostFocus" KeyDown="TextBoxInvFlag1VP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2VP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2VP_LostFocus" KeyDown="TextBoxInvFlag2VP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3VP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3VP_LostFocus" KeyDown="TextBoxInvFlag3VP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4VP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4VP_LostFocus" KeyDown="TextBoxInvFlag4VP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5VP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5VP_LostFocus" KeyDown="TextBoxInvFlag5VP_KeyDown"/>
                                            <Label Content="Max processes started " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,0,0,0"/>
                                            <Label Content="Max reconnect trials" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,23,0,0"/>
                                            <Label Content="Max task fails count" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,46,0,0"/>
                                            <Label Content="Tasks checking time " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,69,0,0"/>
                                            <TextBox x:Name="TextBoxMaxProcessesStartedVP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxProcessesStartedVP_LostFocus" KeyDown="TextBoxMaxProcessesStartedVP_KeyDown" Margin="313,0,0,0"/>
                                            <TextBox x:Name="TextBoxMaxReconnectTrialsVP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="3" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxReconnectTrialsVP_LostFocus" KeyDown="TextBoxMaxReconnectTrialsVP_KeyDown" Margin="313,23,0,0"/>
                                            <TextBox x:Name="TextBoxMaxTaskFailsCountVP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="2" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxTaskFailsCountVP_LostFocus" KeyDown="TextBoxMaxTaskFailsCountVP_KeyDown" Margin="313,46,0,0"/>
                                            <TextBox x:Name="TextBoxTasksCheckingTimeVP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="10" VerticalAlignment="Top" Width="120" LostFocus="TextBoxTasksCheckingTimeVP_LostFocus" KeyDown="TextBoxTasksCheckingTimeVP_KeyDown" Margin="313,69,0,0"/>
                                            <CheckBox x:Name="CheckBoxA0CalcVP" Content="To write A0Calc" HorizontalAlignment="Left" Margin="438,2,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxA0CalcVP_CheckChanged" Unchecked="CheckBoxA0CalcVP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDVP" Content="To use MarineSettingsFD" HorizontalAlignment="Left" Margin="438,22,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDVP_CheckChanged" Unchecked="CheckBoxMarineSettingsFDVP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDCVP" Content="To use MarineSettingsFDC" HorizontalAlignment="Left" Margin="438,42,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDCVP_CheckChanged" Unchecked="CheckBoxMarineSettingsFDCVP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsTDVP" Content="To use MarineSettingsTD" HorizontalAlignment="Left" Margin="438,62,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsTDVP_CheckChanged"  Unchecked="CheckBoxMarineSettingsTDVP_CheckChanged"/>
                                            <TextBlock x:Name="StatusBarVP" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23"/>


                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="EM">
                                        <Grid Background="#FFE5E5E5">
                                            <Button x:Name="ButtonStartCalculationSP" HorizontalAlignment="Right" Margin="285,96,0,0" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartCalculationSP_Click">
                                                <TextBlock Text="Start calculation" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Label Content="Max processes started " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,0,0,0"/>
                                            <Label Content="Max reconnect trials" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,23,0,0"/>
                                            <Label Content="Max task fails count" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,46,0,0"/>
                                            <Label Content="Tasks checking time " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,69,0,0"/>
                                            <TextBox x:Name="TextBoxMaxProcessesStartedSP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxProcessesStartedSP_LostFocus" KeyDown="TextBoxMaxProcessesStartedSP_KeyDown" Margin="313,0,0,0"/>
                                            <TextBox x:Name="TextBoxMaxReconnectTrialsSP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="3" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxReconnectTrialsSP_LostFocus" KeyDown="TextBoxMaxReconnectTrialsSP_KeyDown" Margin="313,23,0,0"/>
                                            <TextBox x:Name="TextBoxMaxTaskFailsCountSP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="2" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxTaskFailsCountSP_LostFocus" KeyDown="TextBoxMaxTaskFailsCountSP_KeyDown" Margin="313,46,0,0"/>
                                            <TextBox x:Name="TextBoxTasksCheckingTimeSP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="10" VerticalAlignment="Top" Width="120" LostFocus="TextBoxTasksCheckingTimeSP_LostFocus" KeyDown="TextBoxTasksCheckingTimeSP_KeyDown" Margin="313,69,0,0"/>
                                            <CheckBox x:Name="CheckBoxA0CalcSP" Content="To write A0Calc" HorizontalAlignment="Left" Margin="438,2,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxA0CalcSP_CheckChanged" Unchecked="CheckBoxA0CalcSP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDSP" Content="To use MarineSettingsFD" HorizontalAlignment="Left" Margin="438,22,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDSP_CheckChanged" Unchecked="CheckBoxMarineSettingsFDSP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDCSP" Content="To use MarineSettingsFDC" HorizontalAlignment="Left" Margin="438,42,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDCSP_CheckChanged" Unchecked="CheckBoxMarineSettingsFDCSP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsTDSP" Content="To use MarineSettingsTD" HorizontalAlignment="Left" Margin="438,62,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsTDSP_CheckChanged"  Unchecked="CheckBoxMarineSettingsTDSP_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxSPVP" Content="EM+IP" HorizontalAlignment="Left" Margin="438,108,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxSPVP_Checked" Unchecked="CheckBoxSPVP_Checked"/>
                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1SP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1SP_LostFocus" KeyDown="TextBoxInvFlag1SP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2SP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2SP_LostFocus" KeyDown="TextBoxInvFlag2SP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3SP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3SP_LostFocus" KeyDown="TextBoxInvFlag3SP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4SP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4SP_LostFocus" KeyDown="TextBoxInvFlag4SP_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5SP" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5SP_LostFocus" KeyDown="TextBoxInvFlag5SP_KeyDown"/>
                                            <TextBlock x:Name="StatusBarSP" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23"/>
                                            <ComboBox x:Name="ComboBoxRewriteCurvesModeSP" HorizontalAlignment="Left" Margin="979,36,0,0" VerticalAlignment="Top" Width="151" SelectionChanged="ComboBoxRewriteCurvesModeSP_SelectionChanged"/>
                                            <Label Content="Rewrite curves mode" HorizontalAlignment="Left" Margin="979,10,0,0" VerticalAlignment="Top" Width="151" HorizontalContentAlignment="Center"/>
                                            <ComboBox x:Name="ComboBoxEMSourceType" HorizontalAlignment="Left" Margin="438,82,0,0" VerticalAlignment="Top" Width="120" Height="21" SelectionChanged="ComboBoxEMSourceType_SelectionChanged"/>
                                            <ListBox x:Name="ListBoxImpulse" HorizontalAlignment="Left" Height="79" Margin="614,28,0,0" VerticalAlignment="Top" Width="122"
                                                     SelectionChanged="ListBoxImpulse_SelectionChanged"
                                                     MouseRightButtonUp="ListBoxImpulse_MouseRightButtonUp"
                                                     MouseLeftButtonUp="ListBoxImpulses_MouseLeftButtonUp"
                                                     >
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <Grid Margin="0,2">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition Width="*" />
                                                            </Grid.ColumnDefinitions>
                                                            <TextBlock Text="{Binding Name}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                            <Button x:Name="ButtonAddImpulse" Content="Add" HorizontalAlignment="Left" Margin="615,112,0,0" VerticalAlignment="Top" Width="37" Click="ButtonAddImpulse_Click"/>
                                            <Button x:Name="ButtonDelImpulse" Content="Del" HorizontalAlignment="Left" Margin="699,112,0,0" VerticalAlignment="Top" Width="37" Click="ButtonDelImpulse_Click"/>
                                            <Button x:Name="ButtonEditImpulse" Content="Edit" HorizontalAlignment="Left" Margin="657,112,0,0" VerticalAlignment="Top" Width="37" Click="ButtonEditImpulse_Click"/>
                                            <CheckBox x:Name="CheckBoxUseLoadedImpulse" Content="Use impulse" HorizontalAlignment="Left" Margin="615,8,0,0" VerticalAlignment="Top" Width="121" Checked="CheckBoxUseLoadedImpulse_Checked" Unchecked="CheckBoxUseLoadedImpulse_Checked"/>
                                            <CheckBox x:Name="CheckBoxCurvedMeshSP" Content="Curved mesh" HorizontalAlignment="Left" Margin="438,128,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxCurvedMeshSP_Checked"/>


                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Stationar">
                                        <Grid Background="#FFE5E5E5">
                                            <Button x:Name="ButtonStartCalculationStat" HorizontalAlignment="Right" Margin="285,96,0,0" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartCalculationStat_Click">
                                                <TextBlock Text="Start calculation" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Label Content="Max processes started " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,0,0,0"/>
                                            <Label Content="Max reconnect trials" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,23,0,0"/>
                                            <Label Content="Max task fails count" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,46,0,0"/>
                                            <Label Content="Tasks checking time " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,69,0,0"/>
                                            <TextBox x:Name="TextBoxMaxProcessesStartedStat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxProcessesStartedStat_LostFocus" KeyDown="TextBoxMaxProcessesStartedStat_KeyDown" Margin="313,0,0,0"/>
                                            <TextBox x:Name="TextBoxMaxReconnectTrialsStat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="3" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxReconnectTrialsStat_LostFocus" KeyDown="TextBoxMaxReconnectTrialsStat_KeyDown" Margin="313,23,0,0"/>
                                            <TextBox x:Name="TextBoxMaxTaskFailsCountStat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="2" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxTaskFailsCountStat_LostFocus" KeyDown="TextBoxMaxTaskFailsCountStat_KeyDown" Margin="313,46,0,0"/>
                                            <TextBox x:Name="TextBoxTasksCheckingTimeStat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="10" VerticalAlignment="Top" Width="120" LostFocus="TextBoxTasksCheckingTimeStat_LostFocus" KeyDown="TextBoxTasksCheckingTimeStat_KeyDown" Margin="313,69,0,0"/>
                                            <CheckBox x:Name="CheckBoxA0CalcStat" Content="To write A0Calc" HorizontalAlignment="Left" Margin="438,2,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxA0CalcStat_CheckChanged" Unchecked="CheckBoxA0CalcStat_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDStat" Content="To use MarineSettingsFD" HorizontalAlignment="Left" Margin="438,22,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDStat_CheckChanged" Unchecked="CheckBoxMarineSettingsFDStat_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDCStat" Content="To use MarineSettingsFDC" HorizontalAlignment="Left" Margin="438,42,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDCStat_CheckChanged" Unchecked="CheckBoxMarineSettingsFDCStat_CheckChanged"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsTDStat" Content="To use MarineSettingsTD" HorizontalAlignment="Left" Margin="438,62,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsTDStat_CheckChanged"  Unchecked="CheckBoxMarineSettingsTDStat_CheckChanged"/>
                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1Stat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1Stat_LostFocus" KeyDown="TextBoxInvFlag1Stat_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2Stat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2Stat_LostFocus" KeyDown="TextBoxInvFlag2Stat_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3Stat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3Stat_LostFocus" KeyDown="TextBoxInvFlag3Stat_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4Stat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4Stat_LostFocus" KeyDown="TextBoxInvFlag4Stat_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5Stat" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5Stat_LostFocus" KeyDown="TextBoxInvFlag5Stat_KeyDown"/>
                                            <TextBlock x:Name="StatusBarStationar" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23"/>
                                            <ComboBox x:Name="ComboBoxRewriteCurvesModeStat" HorizontalAlignment="Left" Margin="979,36,0,0" VerticalAlignment="Top" Width="151" SelectionChanged="ComboBoxRewriteCurvesModeStat_SelectionChanged"/>
                                            <Label Content="Rewrite curves mode" HorizontalAlignment="Left" Margin="979,10,0,0" VerticalAlignment="Top" Width="151" HorizontalContentAlignment="Center"/>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Harmonic">
                                        <Grid Background="#FFE5E5E5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="614"/>
                                                <ColumnDefinition Width="166"/>
                                                <ColumnDefinition Width="88"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="ButtonStartCalculationHarm" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartCalculationHarm_Click" Grid.Column="3">
                                                <TextBlock Text="Start calculation" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Label Content="Max processes started " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,0,0,0"/>
                                            <Label Content="Max reconnect trials" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,23,0,0"/>
                                            <Label Content="Max task fails count" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,46,0,0"/>
                                            <Label Content="Tasks checking time " HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="128" Margin="185,69,0,0"/>
                                            <TextBox x:Name="TextBoxMaxProcessesStartedHarm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxProcessesStartedHarm_LostFocus" KeyDown="TextBoxMaxProcessesStartedHarm_KeyDown" Margin="313,0,0,0"/>
                                            <TextBox x:Name="TextBoxMaxReconnectTrialsHarm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="3" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxReconnectTrialsHarm_LostFocus" KeyDown="TextBoxMaxReconnectTrialsHarm_KeyDown" Margin="313,23,0,0"/>
                                            <TextBox x:Name="TextBoxMaxTaskFailsCountHarm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="2" VerticalAlignment="Top" Width="120" LostFocus="TextBoxMaxTaskFailsCountHarm_LostFocus" KeyDown="TextBoxMaxTaskFailsCountHarm_KeyDown" Margin="313,46,0,0"/>
                                            <TextBox x:Name="TextBoxTasksCheckingTimeHarm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="10" VerticalAlignment="Top" Width="120" LostFocus="TextBoxTasksCheckingTimeHarm_LostFocus" KeyDown="TextBoxTasksCheckingTimeHarm_KeyDown" Margin="313,69,0,0"/>
                                            <CheckBox x:Name="CheckBoxA0CalcHarm" Content="To write A0Calc" HorizontalAlignment="Left" Margin="438,2,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxA0CalcHarm_CheckChanged" Unchecked="CheckBoxA0CalcHarm_CheckChanged" Height="15"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDHarm" Content="To use MarineSettingsFD" HorizontalAlignment="Left" Margin="438,22,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDHarm_CheckChanged" Unchecked="CheckBoxMarineSettingsFDHarm_CheckChanged" Height="15"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsFDCHarm" Content="To use MarineSettingsFDC" HorizontalAlignment="Left" Margin="438,42,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsFDCHarm_CheckChanged" Unchecked="CheckBoxMarineSettingsFDCHarm_CheckChanged" Height="15"/>
                                            <CheckBox x:Name="CheckBoxMarineSettingsTDHarm" Content="To use MarineSettingsTD" HorizontalAlignment="Left" Margin="438,62,0,0" VerticalAlignment="Top" Width="170" Checked="CheckBoxMarineSettingsTDHarm_CheckChanged"  Unchecked="CheckBoxMarineSettingsTDHarm_CheckChanged" Height="15"/>
                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1Harm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1Harm_LostFocus" KeyDown="TextBoxInvFlag1Harm_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2Harm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2Harm_LostFocus" KeyDown="TextBoxInvFlag2Harm_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3Harm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3Harm_LostFocus" KeyDown="TextBoxInvFlag3Harm_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4Harm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4Harm_LostFocus" KeyDown="TextBoxInvFlag4Harm_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5Harm" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5Harm_LostFocus" KeyDown="TextBoxInvFlag5Harm_KeyDown"/>
                                            <TextBlock x:Name="StatusBarHarmonic" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23" Grid.Column="1" Grid.ColumnSpan="3"/>
                                            <DataGrid 
                                                x:Name="DataGridFrequencies"
                                                Grid.Column="1" 
                                                HorizontalAlignment="Stretch" 
                                                VerticalAlignment="Stretch" 
                                                Grid.ColumnSpan="1" 
                                                Margin="0,0,0,29"
                                                CanUserAddRows="False"
                                                CanUserDeleteRows="true"
                                                KeyDown="DataGridFrequencies_KeyDown"
                                                AutoGenerateColumns="False"
                                                >
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn 
                                                        x:Name="DataGridFrequenciesColumnNumber"
                				Header="N" 
                				IsReadOnly = "True" 
                				Binding = "{Binding Number}"   
                				Width="Auto"/>
                                                    <DataGridTextColumn 
                                                        x:Name="DataGridFrequenciesColumnFrequency"
                				Header="Hz" 
                				IsReadOnly = "False" 
                				Binding = "{Binding Value}"   
                				Width="Auto"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <CheckBox x:Name="CheckBoxColeCole" Content="ColeCole" Grid.Column="2" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Checked="CheckBoxColeCole_Checked" Unchecked="CheckBoxColeCole_Checked" Height="15" Width="66"/>
                                            <ComboBox x:Name="ComboBoxColeColePreset" Grid.Column="2" HorizontalAlignment="Left" Margin="10,30,0,0" VerticalAlignment="Top" Width="70" SelectionChanged="ComboBoxColeColePreset_SelectionChanged" Height="22"/>
                                            <Button x:Name="ButtonAddFrequency" Content="Add" Grid.Column="2" HorizontalAlignment="Left" Margin="10,57,0,0" VerticalAlignment="Top" Width="70" Click="ButtonAddFrequency_Click" Height="20"/>
                                            <ComboBox x:Name="ComboBoxRewriteCurvesModeHarm" HorizontalAlignment="Left" Margin="111,36,0,0" VerticalAlignment="Top" Width="151" Grid.Column="3" SelectionChanged="ComboBoxRewriteCurvesModeHarm_SelectionChanged"/>
                                            <Label Content="Rewrite curves mode" Grid.Column="3" HorizontalAlignment="Left" Margin="111,10,0,0" VerticalAlignment="Top" Width="151" HorizontalContentAlignment="Center"/>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Inversion geometry">
                                        <Grid Background="#FFE5E5E5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="187"/>
                                                <ColumnDefinition Width="149"/>
                                                <ColumnDefinition Width="315"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="ButtonStartInversion" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartInversionGeometry_Click" Grid.Column="3">
                                                <TextBlock Text="Start inversion" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Button x:Name="ButtonStopByIteration"  Background="RoyalBlue" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStopByIteration_Click" Grid.Column="3" Margin="0,0,0,37" Visibility="Hidden">
                                                <TextBlock Text="Stop by iteration" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1InvGeom" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1InvGeom_LostFocus" KeyDown="TextBoxInvFlag1InvGeom_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2InvGeom" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2InvGeom_LostFocus" KeyDown="TextBoxInvFlag2InvGeom_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3InvGeom" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3InvGeom_LostFocus" KeyDown="TextBoxInvFlag3InvGeom_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4InvGeom" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4InvGeom_LostFocus" KeyDown="TextBoxInvFlag4InvGeom_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5InvGeom" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5InvGeom_LostFocus" KeyDown="TextBoxInvFlag5InvGeom_KeyDown"/>

                                            <Label Content="Fit begin" HorizontalAlignment="Left" VerticalAlignment="Top" Width="68" Grid.Column="1" Margin="9,12,0,0" Height="26"/>
                                            <Label Content="Fit end" HorizontalAlignment="Left" Margin="9,38,0,0" VerticalAlignment="Top" Width="68" Grid.Column="1" Height="26"/>
                                            <TextBox x:Name="TextBoxFitBegin" HorizontalAlignment="Left" Height="26" Margin="77,12,0,0" TextWrapping="Wrap" Text="0.001" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="1" LostFocus="TextBoxFitBegin_LostFocus" KeyDown="TextBoxFitBegin_KeyDown"/>
                                            <TextBox x:Name="TextBoxFitEnd" HorizontalAlignment="Left" Height="26" Margin="77,38,0,0" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="1" LostFocus="TextBoxFitEnd_LostFocus" KeyDown="TextBoxFitEnd_KeyDown"/>
                                            <ComboBox x:Name="ComboBoxSourceType" HorizontalAlignment="Left" Margin="19,69,0,0" VerticalAlignment="Top" Width="120" Grid.Column="1" Height="22" SelectionChanged="ComboBoxSourceType_SelectionChanged"/>
                                            <ComboBox x:Name="ComboBoxCalculationRegime" HorizontalAlignment="Left" Margin="19,96,0,0" VerticalAlignment="Top" Width="120" Grid.Column="1" Height="22" SelectionChanged="ComboBoxCalculationRegime_SelectionChanged"/>
                                            <TextBlock x:Name="StatusBarInversionGeometry" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23" Grid.Column="3"/>
                                            <ComboBox x:Name="ComboBoxCalculateBeta" Grid.Column="2" HorizontalAlignment="Left" Margin="10,58,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="ComboBoxCalculateBeta_SelectionChanged"/>
                                            <Label x:Name="LabelCalculateBeta" Content="Calculate Beta" Grid.Column="2" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="120" HorizontalContentAlignment="Center"/>
                                            <CheckBox x:Name="CheckBoxOnlyLayers" Content="Only for layers" Grid.Column="2" HorizontalAlignment="Left" Margin="10,38,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxOnlyLayers_Checked" Unchecked="CheckBoxOnlyLayers_Checked"/>
                                            <CheckBox x:Name="CheckBoxInversionGeometryBinaryResultsExp" Content="Binary ResultsExp" Grid.Column="2" HorizontalAlignment="Left" Margin="10,85,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxInversionGeometryBinaryResultsExp_Checked" Unchecked="CheckBoxInversionGeometryBinaryResultsExp_Checked"/>
                                            <CheckBox x:Name="CheckBoxApparentRho" Content="Apparent resistance" Grid.Column="2" HorizontalAlignment="Left" Margin="135,12,0,0" VerticalAlignment="Top" Width="129" Checked="CheckBoxApparentRho_Checked" Unchecked="CheckBoxApparentRho_Checked"/>
                                            <Label Content="Gen. coef" Grid.Column="2" HorizontalAlignment="Left" Margin="135,32,0,0" VerticalAlignment="Top" Width="61"/>
                                            <Label Content="Rho coef" Grid.Column="2" HorizontalAlignment="Left" Margin="135,58,0,0" VerticalAlignment="Top" Width="61"/>
                                            <TextBox x:Name="TextBoxRhoGeneratorCoefficient" HorizontalAlignment="Left" Height="26" Margin="196,32,0,0" TextWrapping="Wrap" Text="0.001" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="2" LostFocus="TextBoxRhoGeneratorCoefficient_LostFocus" KeyDown="TextBoxRhoGeneratorCoefficient_KeyDown"/>
                                            <TextBox x:Name="TextBoxRhoRhoCoefficient" HorizontalAlignment="Left" Height="26" Margin="196,58,0,0" TextWrapping="Wrap" Text="0.001" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="2" LostFocus="TextBoxRhoRhoCoefficient_LostFocus" KeyDown="TextBoxRhoRhoCoefficient_KeyDown"/>
                                        </Grid>
                                    </TabItem>
                                    <TabItem Header="Inversion Cell">
                                        <Grid Background="#FFE5E5E5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="187"/>
                                                <ColumnDefinition Width="149"/>
                                                <ColumnDefinition Width="315"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="ButtonStartInversionCell" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="163" Height="37" Click="ButtonStartInversionCell_Click" Grid.Column="3">
                                                <TextBlock Text="Start inversion" TextWrapping="Wrap" TextAlignment="Center"/>
                                            </Button>
                                            <Label Content="Inv flag 1" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60"/>
                                            <Label Content="Inv flag 2" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,23,0,0"/>
                                            <Label Content="Inv flag 3" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,46,0,0"/>
                                            <Label Content="Inv flag 4" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,69,0,0"/>
                                            <Label Content="Inv flag 5" HorizontalAlignment="Left" VerticalAlignment="Top" Height="23" Width="60" Margin="0,92,0,0"/>
                                            <TextBox x:Name="TextBoxInvFlag1InvCell" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,0,0,0"  LostFocus="TextBoxInvFlag1InvCell_LostFocus" KeyDown="TextBoxInvFlag1InvCell_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag2InvCell" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,23,0,0" LostFocus="TextBoxInvFlag2InvCell_LostFocus" KeyDown="TextBoxInvFlag2InvCell_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag3InvCell" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,46,0,0" LostFocus="TextBoxInvFlag3InvCell_LostFocus" KeyDown="TextBoxInvFlag3InvCell_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag4InvCell" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="120" Margin="60,69,0,0" LostFocus="TextBoxInvFlag4InvCell_LostFocus" KeyDown="TextBoxInvFlag4InvCell_KeyDown"/>
                                            <TextBox x:Name="TextBoxInvFlag5InvCell" HorizontalAlignment="Left" Height="23" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" Margin="60,92,0,0" LostFocus="TextBoxInvFlag5InvCell_LostFocus" KeyDown="TextBoxInvFlag5InvCell_KeyDown"/>

                                            <Label Content="Fit begin" HorizontalAlignment="Left" VerticalAlignment="Top" Width="68" Grid.Column="1" Margin="9,12,0,0" Height="26"/>
                                            <Label Content="Fit end" HorizontalAlignment="Left" Margin="9,38,0,0" VerticalAlignment="Top" Width="68" Grid.Column="1" Height="26"/>
                                            <TextBox x:Name="TextBoxFitBeginCell" HorizontalAlignment="Left" Height="26" Margin="77,12,0,0" TextWrapping="Wrap" Text="0.001" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="1" LostFocus="TextBoxFitBeginCell_LostFocus" KeyDown ="TextBoxFitBeginCell_KeyDown"/>
                                            <TextBox x:Name="TextBoxFitEndCell" HorizontalAlignment="Left" Height="26" Margin="77,38,0,0" TextWrapping="Wrap" Text="1" VerticalAlignment="Top" Width="63" VerticalContentAlignment="Center" Grid.Column="1" LostFocus="TextBoxFitEndCell_LostFocus" KeyDown ="TextBoxFitEndCell_KeyDown"/>
                                            <TextBlock x:Name="StatusBarInversionCell" HorizontalAlignment="Right" Margin="0,0,168,0" TextWrapping="Wrap" Text="TextBlock" VerticalAlignment="Bottom" Width="197" Height="23" Grid.Column="3"/>
                                            <CheckBox x:Name="CheckBoxSmoothWithGammaCell" Content="Smooth" Grid.Column="1" HorizontalAlignment="Left" Margin="10,69,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxSmoothWithGammaCell_Checked" Unchecked="CheckBoxSmoothWithGammaCell_Checked"/>
                                            <Label Content="Max iter." Grid.Column="2" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                                            <TextBox  x:Name="TextBoxMaxIterCell" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="71,12,0,0" TextWrapping="Wrap" Text="100" VerticalAlignment="Top" Width="102" VerticalContentAlignment="Center" LostFocus="TextBoxMaxIterCell_LostFocus" KeyDown="TextBoxMaxIterCell_KeyDown"/>
                                            <CheckBox x:Name="CheckBoxFitAlphaCell" Content="Fit alpha" Grid.Column="2" HorizontalAlignment="Left" Margin="10,43,0,0" VerticalAlignment="Top" Width="163" IsChecked="True" Checked="CheckBoxFitAlphaCell_Checked" Unchecked="CheckBoxFitAlphaCell_Checked"/>
                                            <CheckBox x:Name="CheckBoxFitBetaCell" Content="Fit beta" Grid.Column="2" HorizontalAlignment="Left" Margin="10,58,0,0" VerticalAlignment="Top" Width="163" IsChecked="True" Checked="CheckBoxFitBetaCell_Checked" Unchecked="CheckBoxFitBetaCell_Checked"/>
                                            <CheckBox x:Name="CheckBoxFitTauCell" Content="Fit tau" Grid.Column="2" HorizontalAlignment="Left" Margin="10,73,0,0" VerticalAlignment="Top" Width="163" IsChecked="True" Checked="CheckBoxFitTauCell_Checked" Unchecked ="CheckBoxFitTauCell_Checked"/>
                                            <CheckBox x:Name="CheckBoxInversionCellBinaryResultsExp" Content="Binary ResultsExp" Grid.Column="2" HorizontalAlignment="Left" Margin="10,93,0,0" VerticalAlignment="Top" Width="120" Checked="CheckBoxInversionCellBinaryResultsExp_Checked" Unchecked="CheckBoxInversionCellBinaryResultsExp_Checked"/>
                                        </Grid>
                                    </TabItem>

                                </TabControl>
                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemInversion" Header="Inversion">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition Width="203"/>
                                    <ColumnDefinition Width="306"/>
                                    <ColumnDefinition Width="352"/>
                                    <ColumnDefinition Width="497*"/>
                                    <ColumnDefinition Width="247*"/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Inversion areas" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <ListBox Name="ListBoxInversionAreas"
                                         HorizontalContentAlignment="Stretch"
                                         Margin="0,26,0,110"
                                         SelectionChanged="ListBoxInversionAreas_SelectionChanged"
                                         MouseRightButtonUp="ListBoxInversionAreas_MouseRightButtonUp"
                                         MouseLeftButtonUp="ListBoxInversionAreas_MouseLeftButtonUp"
                                         >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button x:Name="ButtonInversionAddArea" Content="Add" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="77" Height="20" Click="ButtonInversionAddArea_Click" Margin="143,0,0,85"/>
                                <Button x:Name="ButtonInversionDelArea" Content="Del" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="77" Height="20" Click="ButtonInversionDelArea_Click" Margin="143,0,0,60"/>
                                <Button x:Name="ButtonInversionParameters" Content="Parameters" VerticalAlignment="Bottom" Height="20" Click="ButtonInversionParameters_Click" Margin="143,0,0,0"/>
                                <DataGrid 
                                    x:Name="DataGridEmbryos" 
                                    Grid.Column="4" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    MouseRightButtonUp="DataGridEmbryos_MouseRightButtonUp"
                                    MouseLeftButtonUp="DataGridEmbryos_MouseLeftButtonUp"
                                    SelectionChanged="DataGridEmbryos_SelectionChanged"
                                    KeyDown="DataGridEmbryos_KeyDown"
                                    KeyUp="DataGridEmbryos_KeyUp"
                                    SelectedValuePath="Value" 
                                    DisplayMemberPath="Value"
                                    HorizontalAlignment="Stretch"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Value.Number}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Level" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Level}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="RhoH" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.RhoH}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="RhoV" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.RhoV}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Alpha" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Alpha}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Beta" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Beta}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="T0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Tau}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="C" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.C}"   
                                            Width="Auto"/>
                                        <DataGridComboBoxColumn  
                                            x:Name="DGCBDepsEmbryos"
                                            Header="Dep."
                                            Width="40"
                                            ItemsSource="{Binding}"
                                            SelectedValuePath="Id" 
                                            DisplayMemberPath="Title"
                                            SelectedValueBinding = "{Binding Value.Dep, UpdateSourceTrigger=LostFocus}"/>
                                        <DataGridTextColumn 
                                            Header="Hash" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.HashNumber}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Label Content="Embryos" Grid.Column="4" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Planes" Grid.Column="1" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Lines X" Grid.Column="2" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Lines Y" Grid.Column="3" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <DataGrid 
                                    x:Name="DataGridInversionPlanes" 
                                    Grid.Column="1" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="True" SelectionChanged="DataGridInversionPlanes_SelectionChanged"
                                    MouseRightButtonUp="DataGridInversionPlanes_MouseRightButtonUp"
                                    MouseLeftButtonUp="DataGridInversionPlanes_MouseLeftButtonUp"
                                    KeyDown="DataGridInversionPlanes_KeyDown"
                                    PreviewKeyDown="DataGridInversionPlanes_KeyDown"
                                    KeyUp="DataGridInversionPlanes_KeyUp"
                                    PreviewKeyUp="DataGridInversionPlanes_KeyUp"
                                    
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid 
                                    x:Name="DataGridInversionLinesX" 
                                    Grid.Column="2" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="True"
                                    SelectionChanged="DataGridInversionLinesX_SelectionChanged"
                                    MouseRightButtonUp="DataGridInversionLinesX_MouseRightButtonUp"
                                    MouseLeftButtonUp="DataGridInversionLinesX_MouseLeftButtonUp"
                                    KeyDown="DataGridInversionLinesX_KeyDown"
                                    KeyUp="DataGridInversionLinesX_KeyUp"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="X0"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid 
                                    x:Name="DataGridInversionLinesY" 
                                    Grid.Column="3" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="True"
                                    SelectionChanged="DataGridInversionLinesY_SelectionChanged"
                                    MouseRightButtonUp="DataGridInversionLinesY_MouseRightButtonUp"
                                    MouseLeftButtonUp="DataGridInversionLinesY_MouseLeftButtonUp"
                                    KeyDown="DataGridInversionLinesY_KeyDown"
                                    KeyUp="DataGridInversionLinesY_KeyUp"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionPlanes_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="X0"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Label Content="Hx" HorizontalAlignment="Left" Margin="0,0,0,79" VerticalAlignment="Bottom" Height="26" Width="24"/>
                                <Label Content="Hy" HorizontalAlignment="Left" Margin="0,0,0,53" VerticalAlignment="Bottom" Height="26" Width="24"/>
                                <Label Content="Hz" HorizontalAlignment="Left" Margin="0,0,0,27" VerticalAlignment="Bottom" Height="26" Width="24"/>
                                <TextBox x:Name="TextBoxHx" HorizontalAlignment="Left" Height="26" Margin="24,0,0,79" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Bottom" Width="114" VerticalContentAlignment="Center" LostFocus="TextBoxHx_LostFocus" KeyDown ="TextBoxHx_KeyDown"/>
                                <TextBox x:Name="TextBoxHy" HorizontalAlignment="Left" Height="26" Margin="24,0,0,53" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Bottom" Width="114" VerticalContentAlignment="Center" LostFocus="TextBoxHy_LostFocus" KeyDown ="TextBoxHy_KeyDown"/>
                                <TextBox x:Name="TextBoxHz" HorizontalAlignment="Left" Height="26" Margin="24,0,0,27" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Bottom" Width="114" VerticalContentAlignment="Center" LostFocus="TextBoxHz_LostFocus" KeyDown ="TextBoxHz_KeyDown"/>
                                <ComboBox x:Name="ComboBoxObjectsConcerning" HorizontalAlignment="Left" Margin="0,0,0,0" VerticalAlignment="Bottom" Width="138" SelectionChanged="ComboBoxObjectsConcerning_SelectionChanged" Height="22"/>

                                <Button x:Name="ButtonSelectMutualColor" Content="" HorizontalAlignment="Left" Margin="143,0,0,25" VerticalAlignment="Bottom" Width="30" Height="30" Background="Black" Click="ButtonSelectMutualColor_Click" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Mutual color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonSelectFreeColor" Content="" HorizontalAlignment="Left" Margin="185,0,0,25" VerticalAlignment="Bottom" Width="30" Height="30" Background="Black" Click="ButtonSelectFreeColor_Click" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Free color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Grid Grid.Column="5" HorizontalAlignment="Stretch" Margin="0,0,0,0" VerticalAlignment="Stretch">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="26"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    <Label Content="Relief" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Margin="0,0,0,0" Grid.Row="0"/>
                                    <CheckBox x:Name="CheckBoxFitRelief" Content="Fit relief" HorizontalAlignment="Left" Margin="10,10,0,0" Grid.Row="1" VerticalAlignment="Top" Height="20" VerticalContentAlignment="Center" Checked="CheckBoxFitRelief_Checked" Unchecked="CheckBoxFitRelief_Checked"/>
                                    <Button x:Name="ButtonEditMeshes" Content="Edit meshes" HorizontalAlignment="Left" Margin="76,10,0,0" Grid.Row="1" VerticalAlignment="Top" Width="75" Click="ButtonEditMeshes_Click"/>
                                </Grid>


                            </Grid>
                        </TabItem>

                        <TabItem x:Name="TabItemInversionResults" Header="Inversion Results">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition Width="203"/>
                                    <ColumnDefinition Width="306"/>
                                    <ColumnDefinition Width="352"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Iterations" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <ListBox Name="ListBoxInversionResultsIterations"
                                         HorizontalContentAlignment="Stretch"
                                         Margin="0,26,0,25"
                                         SelectionChanged="ListBoxInversionResultsIterations_SelectionChanged"
                                         MouseRightButtonUp="ListBoxInversionResultsIterations_MouseRightButtonUp"
                                         MouseLeftButtonUp="ListBoxInversionResultsIterations_MouseLeftButtonUp"
                                         >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button x:Name="ButtonInversionResultsLoad" Content="Load" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20" Click="ButtonInversionResultsLoad_Click"/>
                                <Button x:Name="ButtonInversionResultsDel"  Content="Del" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20"  Click="ButtonInversionResultsDel_Click" Margin="54,0,0,0"/>
                                <DataGrid 
                                    x:Name="DataGridInversionResultsEmbryos" 
                                    Grid.Column="4" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    MouseRightButtonUp="DataGridInversionResultsEmbryos_MouseRightButtonUp"
                                    MouseLeftButtonUp= "DataGridInversionResultsEmbryos_MouseLeftButtonUp"
                                    SelectionChanged=  "DataGridInversionResultsEmbryos_SelectionChanged"
                                    KeyDown=           "DataGridInversionResultsEmbryos_KeyDown"
                                    KeyUp=             "DataGridInversionResultsEmbryos_KeyUp"
                                    SelectedValuePath="Value" 
                                    DisplayMemberPath="Value"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Value.Number}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Level" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Level}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="RhoH" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.RhoH}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="RhoV" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.RhoV}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Alpha" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Alpha}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Beta" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Beta}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="T0" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.Tau}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="C" 
                                            IsReadOnly = "True" 
                                            Binding = "{Binding Value.C}"   
                                            Width="Auto"/>
                                        <DataGridComboBoxColumn  
                                            x:Name="DGCBDepsResultsEmbryos"
                                            Header="Dep."
                                            Width="40"
                                            ItemsSource="{Binding}"
                                            SelectedValuePath="Id" 
                                            DisplayMemberPath="Title"
                                            SelectedValueBinding = "{Binding Value.Dep, UpdateSourceTrigger=LostFocus}"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <Label Content="Embryos" Grid.Column="4" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Planes" Grid.Column="1" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Lines X" Grid.Column="2" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <Label Content="Lines Y" Grid.Column="3" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <DataGrid 
                                    x:Name="DataGridInversionResultsPlanes" 
                                    Grid.Column="1" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="True" SelectionChanged="DataGridInversionResultsPlanes_SelectionChanged"
                                    MouseRightButtonUp=                       "DataGridInversionResultsPlanes_MouseRightButtonUp"
                                    MouseLeftButtonUp=                        "DataGridInversionResultsPlanes_MouseLeftButtonUp"
                                    KeyDown=                                  "DataGridInversionResultsPlanes_KeyDown"
                                    PreviewKeyDown=                           "DataGridInversionResultsPlanes_KeyDown"
                                    KeyUp=                                    "DataGridInversionResultsPlanes_KeyUp"
                                    PreviewKeyUp=                             "DataGridInversionResultsPlanes_KeyUp"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionResultsPlanes_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionResultsPlanes_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid 
                                    x:Name="DataGridInversionResultsLinesX" 
                                    Grid.Column="2" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    SelectionChanged=  "DataGridInversionResultsLinesX_SelectionChanged"
                                    MouseRightButtonUp="DataGridInversionResultsLinesX_MouseRightButtonUp"
                                    MouseLeftButtonUp= "DataGridInversionResultsLinesX_MouseLeftButtonUp"
                                    KeyDown=           "DataGridInversionResultsLinesX_KeyDown"
                                    KeyUp=             "DataGridInversionResultsLinesX_KeyUp"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionResultsLinesX_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionResultsLinesX_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="X0"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                <DataGrid 
                                    x:Name="DataGridInversionResultsLinesY" 
                                    Grid.Column="3" 
                                    Margin="0,26,0,0"
                                    AutoGenerateColumns="False"
                                    CanUserAddRows="False"
                                    CanUserDeleteRows="False"
                                    SelectionChanged=  "DataGridInversionResultsLinesY_SelectionChanged"
                                    MouseRightButtonUp="DataGridInversionResultsLinesY_MouseRightButtonUp"
                                    MouseLeftButtonUp= "DataGridInversionResultsLinesY_MouseLeftButtonUp"
                                    KeyDown=           "DataGridInversionResultsLinesY_KeyDown"
                                    KeyUp=             "DataGridInversionResultsLinesY_KeyUp"
                                    >
                                    <DataGrid.Columns>
                                        <DataGridTextColumn 
                                            Header="N" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Number}"   
                                            Width="Auto"/>
                                        <DataGridCheckBoxColumn 
                                            Header="Visible" 
                                            Width="Auto" 
                                            Binding = "{Binding Visible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridInversionResultsLinesY_VisibleCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridInversionResultsLinesY_VisibleCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>

                                        </DataGridCheckBoxColumn>
                                        <DataGridTextColumn 
                                            Header="X0"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding X0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="X1"
                                            IsReadOnly = "false" 
                                            Binding = "{Binding X1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y0"
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Y0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Y1" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Y1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z0" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z0}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Z1" 
                                            IsReadOnly = "false" 
                                            Binding = "{Binding Z1}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Layer" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding LayerNumber}"   
                                            Width="Auto"/>
                                        <DataGridTextColumn 
                                            Header="Objects" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding ObjectNumbers.Count}"   
                                            Width="Auto"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemMeshes" Header="Meshes">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition Width="203"/>
                                    <ColumnDefinition Width="306"/>
                                    <ColumnDefinition Width="352"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Meshes" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <ListBox Name="ListBoxmeshes"
                                         HorizontalContentAlignment="Stretch"
                                         Margin="0,26,0,25"
                                         SelectionChanged="ListBoxmeshes_SelectionChanged"
                                         MouseRightButtonUp="ListBoxmeshes_MouseRightButtonUp"
                                         MouseLeftButtonUp="ListBoxmeshes_MouseLeftButtonUp"
                                         >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button x:Name="ButtonMeshLoad" Content="Load" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20" Click="ButtonMeshLoad_Click"/>
                                <Button x:Name="ButtonMeshDel"  Content="Del" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20"  Click="ButtonMeshDel_Click" Margin="54,0,0,0"/>
                                <Label Content="Drawing" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="1"/>
                                <CheckBox x:Name="CheckBoxMeshDrawSurface" Content="Draw surface" Grid.Column="1" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshDrawSurface_Checked" Unchecked="CheckBoxMeshDrawSurface_Checked"/>
                                <CheckBox x:Name="CheckBoxMeshDrawEdges" Content="Draw edges" Grid.Column="1" HorizontalAlignment="Left" Margin="10,46,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshDrawEdges_Checked" Unchecked="CheckBoxMeshDrawEdges_Checked"/>
                                <CheckBox x:Name="CheckBoxMeshDrawNodes" Content="Draw nodes" Grid.Column="1" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshDrawNodes_Checked" Unchecked="CheckBoxMeshDrawNodes_Checked"/>
                                <CheckBox x:Name="CheckBoxMeshDrawCorners" Content="Draw corners" Grid.Column="1" HorizontalAlignment="Left" Margin="10,76,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshDrawCorners_Checked" Unchecked="CheckBoxMeshDrawCorners_Checked"/>
                                <CheckBox x:Name="CheckBoxMeshDrawMaterialBounds" Content="Draw material bounds" Grid.Column="1" HorizontalAlignment="Left" Margin="10,91,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshDrawMaterialBounds_Checked" Unchecked="CheckBoxMeshDrawMaterialBounds_Checked"/>
                                <CheckBox x:Name="CheckBoxMeshSmoothLines" Content="Smooth lines" Grid.Column="1" HorizontalAlignment="Left" Margin="10,106,0,0" VerticalAlignment="Top" Checked="CheckBoxMeshSmoothLines_Checked" Unchecked="CheckBoxMeshSmoothLines_Checked"/>
                                <Label Content="Point size" Grid.Column="1" HorizontalAlignment="Left" Margin="10,121,0,0" VerticalAlignment="Top"/>
                                <Label Content="Line width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,147,0,0" VerticalAlignment="Top"/>
                                <Label Content="Corner width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,173,0,0" VerticalAlignment="Top"/>
                                <Label Content="Material width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,199,0,-14" VerticalAlignment="Top"/>
                                <TextBox x:Name="TextBoxMeshPointSize" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,121,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxMeshPointSize_TextChanged"/>
                                <TextBox x:Name="TextBoxMeshLineWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,147,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxMeshLineWidth_TextChanged"/>
                                <TextBox x:Name="TextBoxMeshCornerWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,173,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxMeshCornerWidth_TextChanged"/>
                                <TextBox x:Name="TextBoxMeshMaterialWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,199,10,-14" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxMeshMaterialWidth_TextChanged"/>

                                <Button x:Name="ButtonMeshPointColor" Content="" HorizontalAlignment="Right" Margin="0,26,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonMeshPointColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Point color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonMeshLineColor" Content="" HorizontalAlignment="Right" Margin="0,51,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonMeshLineColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Line color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonMeshCornerColor" Content="" HorizontalAlignment="Right" Margin="0,76,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonMeshCornerColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Corner line color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonMeshMaterialColor" Content="" HorizontalAlignment="Right" Margin="0,101,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonMeshMaterialColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Material bound color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Sections" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="2"/>
                                <Label Content="X" Grid.Column="2" HorizontalAlignment="Left" Margin="130,26,0,0" VerticalAlignment="Top"/>
                                <Label Content="Y" Grid.Column="2" HorizontalAlignment="Left" Margin="130,52,0,0" VerticalAlignment="Top"/>
                                <Label Content="Z" Grid.Column="2" HorizontalAlignment="Left" Margin="130,78,0,0" VerticalAlignment="Top"/>
                                <Label Content="NormX" Grid.Column="2" HorizontalAlignment="Left" Margin="130,104,0,0" VerticalAlignment="Top"/>
                                <Label Content="NormY" Grid.Column="2" HorizontalAlignment="Left" Margin="130,130,0,0" VerticalAlignment="Top"/>
                                <Label Content="NormZ" Grid.Column="2" HorizontalAlignment="Left" Margin="130,156,0,0" VerticalAlignment="Top"/>
                                <Label Content="Name" Grid.Column="2" HorizontalAlignment="Left" Margin="130,182,0,0" VerticalAlignment="Top"/>
                                <TextBox x:Name="TextBoxSectionX" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,26,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionY" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,52,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionZ" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,78,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionNX" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,104,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionNY" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,130,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionNZ" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,156,0,0" TextWrapping="Wrap" Text="" VerticalAlignment="Top" Width="120"/>
                                <TextBox x:Name="TextBoxSectionName" Grid.Column="2" HorizontalAlignment="Left" Height="26" Margin="172,182,0,0" TextWrapping="Wrap" Text="New section" VerticalAlignment="Top" Width="120"/>
                                <Button x:Name="ButtonSectionAdd" Content="Add" Grid.Column="2" HorizontalAlignment="Left" Margin="0,0,0,5" VerticalAlignment="Bottom" Width="40" Click="ButtonSectionAdd_Click"/>
                                <Button x:Name="ButtonSectionDel" Content="Del" Grid.Column="2" HorizontalAlignment="Left" Margin="45,0,0,5" VerticalAlignment="Bottom" Width="40" Click="ButtonSectionDel_Click"/>
                                <Button x:Name="ButtonSectionSave" Content="Save" Grid.Column="2" HorizontalAlignment="Left" Margin="90,0,0,5" VerticalAlignment="Bottom" Width="40" Click="ButtonSectionSave_Click"/>
                                <DataGrid
                                    Grid.Column="2"
                                Margin="0,24,176,29"
                                Background="White" 
                                CanUserAddRows="False"  
                                CanUserSortColumns="False" 
                                CanUserDeleteRows="False"
                                x:Name="DataGridSections"
                                ScrollViewer.CanContentScroll="True" 
                                ScrollViewer.VerticalScrollBarVisibility="Auto"
                                Visibility="Visible"
                                AutoGenerateColumns="False"
                                Width="130"
                                IsSynchronizedWithCurrentItem="True" SelectionChanged="DataGridSections_SelectionChanged">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn 
                                            Header="Active" 
                                            Width="Auto" 
                                            Binding = "{Binding Active, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                            <DataGridCheckBoxColumn.EditingElementStyle>
                                                <Style TargetType="{x:Type CheckBox}">
                                                    <Setter Property="HorizontalAlignment" Value="Center" />
                                                    <EventSetter Event="ToggleButton.Checked"   Handler="DataGridSections_ActiveCheckChanged" />
                                                    <EventSetter Event="ToggleButton.Unchecked" Handler="DataGridSections_ActiveCheckChanged" />
                                                </Style>
                                            </DataGridCheckBoxColumn.EditingElementStyle>
                                        </DataGridCheckBoxColumn>

                                        <DataGridTextColumn 
                                            Header="Name" 
                                            IsReadOnly = "true" 
                                            Binding = "{Binding Name}"   
                                            Width="Auto" CanUserReorder="False"/>
                                    </DataGrid.Columns>
                                </DataGrid>

                            </Grid>
                        </TabItem>
                        <TabItem x:Name="TabItemModels" Header="Models">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="220"/>
                                    <ColumnDefinition Width="203"/>
                                    <ColumnDefinition Width="218"/>
                                    <ColumnDefinition Width="267"/>
                                    <ColumnDefinition Width="338"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Label Content="Models" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26"/>
                                <ListBox Name="ListBoxModels"
                                         HorizontalContentAlignment="Stretch"
                                         Margin="0,26,0,25"
                                         SelectionChanged="ListBoxModels_SelectionChanged"
                                         MouseRightButtonUp="ListBoxModels_MouseRightButtonUp"
                                         MouseLeftButtonUp="ListBoxModels_MouseLeftButtonUp"
                                         >
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Text="{Binding Name}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button x:Name="ButtonModelLoad" Content="Load" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20" Click="ButtonModelLoad_Click"/>
                                <Button x:Name="ButtonModelDel"  Content="Del" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="49" Height="20"  Click="ButtonModelDel_Click" Margin="54,0,0,0"/>
                                <Label Content="Drawing" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="1"/>
                                <CheckBox x:Name="CheckBoxModelDrawSurface" Content="Draw surface" Grid.Column="1" HorizontalAlignment="Left" Margin="10,31,0,0" VerticalAlignment="Top" Checked="CheckBoxModelDrawSurface_Checked" Unchecked="CheckBoxModelDrawSurface_Checked" Height="15" Width="87"/>
                                <CheckBox x:Name="CheckBoxModelDrawEdges" Content="Draw edges" Grid.Column="1" HorizontalAlignment="Left" Margin="10,46,0,0" VerticalAlignment="Top" Checked="CheckBoxModelDrawEdges_Checked" Unchecked="CheckBoxModelDrawEdges_Checked" Height="15" Width="81"/>
                                <CheckBox x:Name="CheckBoxModelDrawNodes" Content="Draw nodes" Grid.Column="1" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top" Checked="CheckBoxModelDrawNodes_Checked" Unchecked="CheckBoxModelDrawNodes_Checked" Height="15" Width="82"/>
                                <CheckBox x:Name="CheckBoxModelDrawCorners" Content="Draw corners" Grid.Column="1" HorizontalAlignment="Left" Margin="10,76,0,0" VerticalAlignment="Top" Checked="CheckBoxModelDrawCorners_Checked" Unchecked="CheckBoxModelDrawCorners_Checked" Height="15" Width="89"/>
                                <CheckBox x:Name="CheckBoxModelDrawMaterialBounds" Content="Draw material bounds" Grid.Column="1" HorizontalAlignment="Left" Margin="10,91,0,0" VerticalAlignment="Top" Checked="CheckBoxModelDrawMaterialBounds_Checked" Unchecked="CheckBoxModelDrawMaterialBounds_Checked" Height="15" Width="136"/>
                                <CheckBox x:Name="CheckBoxModelSmoothLines" Content="Smooth lines" Grid.Column="1" HorizontalAlignment="Left" Margin="10,106,0,0" VerticalAlignment="Top" Checked="CheckBoxModelSmoothLines_Checked" Unchecked="CheckBoxModelSmoothLines_Checked" Height="15" Width="88"/>
                                <Label Content="Point size" Grid.Column="1" HorizontalAlignment="Left" Margin="10,121,0,0" VerticalAlignment="Top" Height="26" Width="61"/>
                                <Label Content="Line width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,147,0,0" VerticalAlignment="Top" Height="26" Width="64"/>
                                <Label Content="Corner width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,173,0,0" VerticalAlignment="Top" Height="26" Width="79"/>
                                <Label Content="Material width" Grid.Column="1" HorizontalAlignment="Left" Margin="10,199,0,0" VerticalAlignment="Top" Height="26" Width="86"/>
                                <TextBox x:Name="TextBoxModelPointSize" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,121,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxModelPointSize_TextChanged"/>
                                <TextBox x:Name="TextBoxModelLineWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,147,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxModelLineWidth_TextChanged"/>
                                <TextBox x:Name="TextBoxModelCornerWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,173,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxModelCornerWidth_TextChanged"/>
                                <TextBox x:Name="TextBoxModelMaterialWidth" Grid.Column="1" HorizontalAlignment="Right" Height="26" Margin="0,199,10,0" TextWrapping="Wrap" Text="TextBox" VerticalAlignment="Top" Width="97" VerticalContentAlignment="Center" TextChanged="TextBoxModelMaterialWidth_TextChanged"/>

                                <Button x:Name="ButtonModelPointColor" Content="" HorizontalAlignment="Right" Margin="0,26,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonModelPointColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Point color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonModelLineColor" Content="" HorizontalAlignment="Right" Margin="0,51,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonModelLineColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Line color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtonModelCornerColor" Content="" HorizontalAlignment="Right" Margin="0,76,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonModelCornerColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Corner line color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Button x:Name="ButtoModelhMaterialColor" Content="" HorizontalAlignment="Right" Margin="0,101,10,0" VerticalAlignment="Top" Width="20" Height="20" Background="Black" Click="ButtonModelMaterialColor_Click" Grid.Column="1" >
                                    <Button.ToolTip>
                                        <ToolTip Background="#90004455">
                                            <TextBlock Margin="3" Foreground="White">Material bound color</TextBlock>
                                        </ToolTip>
                                    </Button.ToolTip>
                                </Button>
                                <Label Content="Cut" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="2"/>
                                <CheckBox x:Name="CheckBoxModelCutX0" Content="Cut X0" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left"    Margin="10,036,0,0" VerticalAlignment="Top" Height="23"    Checked="CheckBoxModelCutX0_Checked" Unchecked="CheckBoxModelCutX0_Checked" Width="54"/>
                                <CheckBox x:Name="CheckBoxModelCutX1" Content="Cut X1" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left"    Margin="10,059,0,0" VerticalAlignment="Top" Height="23"    Checked="CheckBoxModelCutX1_Checked" Unchecked="CheckBoxModelCutX1_Checked" Width="54"/>
                                <CheckBox x:Name="CheckBoxModelCutY0" Content="Cut Y0" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left"    Margin="10,83,0,0" VerticalAlignment="Top" Height="23"    Checked="CheckBoxModelCutY0_Checked" Unchecked="CheckBoxModelCutY0_Checked" Width="54"/>
                                <CheckBox x:Name="CheckBoxModelCutY1" Content="Cut Y1" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left"    Margin="10,105,0,0" VerticalAlignment="Top" Height="23"    Checked="CheckBoxModelCutY1_Checked" Unchecked="CheckBoxModelCutY1_Checked" Width="54"/>
                                <CheckBox x:Name="CheckBoxModelCutZ0" Content="Cut Zeta0" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="10,128,0,0" VerticalAlignment="Top" Height="23" Checked="CheckBoxModelCutZ0_Checked" Unchecked="CheckBoxModelCutZ0_Checked" Width="70"/>
                                <CheckBox x:Name="CheckBoxModelCutZ1" Content="Cut Zeta1" Grid.Column="2" VerticalContentAlignment="Center" HorizontalAlignment="Left" Margin="10,151,0,0" VerticalAlignment="Top" Height="23" Checked="CheckBoxModelCutZ1_Checked" Unchecked="CheckBoxModelCutZ1_Checked" Width="70"/>
                                <TextBox x:Name="TextBoxModelCutX0" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,036,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutX0_KeyUp" LostFocus="TextBoxModelCutX0_LostFocus"/>
                                <TextBox x:Name="TextBoxModelCutX1" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,059,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutX1_KeyUp" LostFocus="TextBoxModelCutX1_LostFocus"/>
                                <TextBox x:Name="TextBoxModelCutY0" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,82,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutY0_KeyUp" LostFocus="TextBoxModelCutY0_LostFocus"/>
                                <TextBox x:Name="TextBoxModelCutY1" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,105,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutY1_KeyUp" LostFocus="TextBoxModelCutY1_LostFocus"/>
                                <TextBox x:Name="TextBoxModelCutZ0" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,128,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutZ0_KeyUp" LostFocus="TextBoxModelCutZ0_LostFocus"/>
                                <TextBox x:Name="TextBoxModelCutZ1" Grid.Column="2" HorizontalAlignment="Left" Height="23" Margin="85,151,0,0" TextWrapping="Wrap" Text="0" VerticalAlignment="Top" Width="120" KeyUp="TextBoxModelCutZ1_KeyUp" LostFocus="TextBoxModelCutZ1_LostFocus"/>


                                <Label Content="Fields" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="3"/>


                                <Label Content="Palette" VerticalAlignment="Top" HorizontalContentAlignment="Center" Height="26" Grid.Column="4"/>
                                <postProc:PalettesControl Grid.Column="4" x:Name="PalettesControlModels" Margin="0,26,0,0"/>
                                <ComboBox x:Name="ComboBoxModelsCurrentField" Grid.Column="3" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top" Width="120" SelectionChanged="ComboBoxModelsCurrentField_SelectionChanged"/>
                                <Label Content="Current field" Grid.Column="3" HorizontalAlignment="Left" Margin="10,26,0,0" VerticalAlignment="Top" Width="120"/>

                            </Grid>
                        </TabItem>
                    </TabControl>

                </ScrollViewer>

                <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Background="AliceBlue"/>

                <DockPanel x:Name="Testel"  Grid.Row="2" >
                    <Grid x:Name="GridAllPanels">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="10"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <Grid x:Name="GridTopPanels" Grid.Row="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <WindowsFormsHost Grid.Column="0">
                                <openglwin:CObject3DDraw2D x:Name="XZOpenGlWindow"   />
                                <!--<openglwin:CObject3DDraw2D x:Name="XYOpenGlWindow"  />-->
                            </WindowsFormsHost>
                            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="AliceBlue"/>


                            <WindowsFormsHost Grid.Column="2" x:Name="topMiddleWindow">
                                <openglwin:CObject3DDraw2D x:Name="XYOpenGlWindow"  />
                                <!--<openglwin:CObject3DDraw2D x:Name="XZOpenGlWindow"   />-->
                                
                            </WindowsFormsHost>
                            <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" Background="AliceBlue"/>
                            <WindowsFormsHost Grid.Column="4">
                                <openglwin:CObject3DDraw2D  x:Name="YZOpenGlWindow"/>
                            </WindowsFormsHost>

                        </Grid>
                        <GridSplitter Grid.Row="1" HorizontalAlignment="Stretch" Background="AliceBlue"/>

                        <Grid x:Name="GridBottomPanels" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="4"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <WindowsFormsHost Grid.Column="0">
                                <openglwin:CGraphDraw x:Name="GraphOpenGlWindow1" />
                            </WindowsFormsHost>
                            <GridSplitter Grid.Column="1" HorizontalAlignment="Stretch" Background="AliceBlue"/>
                            <WindowsFormsHost Grid.Column="2">
                                <openglwin:CGraphDraw x:Name="GraphOpenGlWindow2" />
                            </WindowsFormsHost>
                            <GridSplitter Grid.Column="3" HorizontalAlignment="Stretch" Background="AliceBlue"/>
                            <WindowsFormsHost Grid.Column="4" >
                                <!--<openglwin:CView3D x:Name="View3DWindow" />-->
                                <openglwin:CView3D x:Name="View3DWindow" />
                                
                            </WindowsFormsHost>

                        </Grid>

                    </Grid>

                </DockPanel>

            </Grid>
        </DockPanel>
    </DockPanel>
</Window>
